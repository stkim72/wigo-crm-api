<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ceragem.api.pub.dao.PubBizrBasDao">


	<sql id="pagingHeader">
	SELECT T.*
	  FROM ( SELECT ROWNUM AS ROW_INDEX
	              , A.*
	           FROM (
	</sql>
	<sql id="pagingFooter">
	                  ) A ) T
	 WHERE   T.ROW_INDEX BETWEEN NVL(#{firstRecordIndex},1) AND NVL(#{lastRecordIndex},30)
	</sql>
	
	
    <sql id="sqlPkConditions">
             
                WHERE 1=1 
            <if test="pubBizrBasNo != null and pubBizrBasNo != ''">
                AND PUB_BIZR_BAS_NO             =       #{pubBizrBasNo}
            </if>
            
            <if test="id != null and id != ''">
                AND ID              =       #{id}
            </if>
            
            <if test="mphonNo != null and mphonNo != ''">
                AND MPHON_NO              =       DAMO.ENCRYPT_VAR_B64('AES_256',#{mphonNo},'')
            </if>
            
             <if test="bizrNo != null and bizrNo != ''">
                AND BIZR_NO              =       #{bizrNo}
            </if>
            
           <if test="id == '' and pubBizrBasNo == ''">
                AND 1=2
            </if>
            
             <if test="searchWord != '' and searchWord != null">
                AND ( ID = #{searchWord} OR MPHON_NO = DAMO.ENCRYPT_VAR_B64('AES_256',#{searchWord},'')  OR BIZR_NO = #{searchWord}  )
            </if>
            
            
    </sql>
    
    
    
     <sql id="sqlUpdateConditions">
             
                WHERE 1=1 
                AND ID              =       #{id}
           
            
    </sql>
    
    
    <sql id="sqlCols">
                      ID                    /*아이디        */
                    , PWD                    /*암호        */
                    , BIZR_NM                    /*사업자명        */
                    , BIZR_NO                    /*사업자번호        */
                    , MPHON_NO                    /*휴대전화        */
                    , EMAIL_ADDR                    /*이메일        */
                    , CORP_DIV_YN                    /*법인여부        */
                    , FAX_NO                    /*팩스번호        */
                    , ZIP_CD                    /*주소        */
                    , ADDR_CTNTS                    /*주소        */
                    , ADDR_2_CTNTS                    /*주소        */
                    , BANK_NM                    /*은행명        */
                    , BANK_NO                    /*계좌번호        */
                    , WLOUNGE_CD                    /*웰라운지        */
                    , REGR_ID                    /*등록자        */
                    , REG_DT                    /*등록일시        */
                    , AMDR_ID                    /*수정자        */
                    , AMD_DT                    /*수정일시        */
                    , STATUS_CD                    /*상태        */
                    , LEAVE_DT                    /*탈퇴일자        */
                    , PUB_BIZR_BAS_NO                    /*공유사업자기본번호        */
                    , BIZR_FILE_CD                    /*사업자번호 파일번호        */
                    , BANK_FILE_CD                    /*계좌번호 파일번호        */
    </sql>
    <sql id="sqlSelectCols">
                      A.ID                    /*아이디        */
                    , A.PWD                    /*암호        */
                    , A.BIZR_NM                    /*사업자명        */
                    , A.BIZR_NO                    /*사업자번호        */
                    , DAMO.DECRYPT_VAR_B64('AES_256', A.MPHON_NO  ,'')  MPHON_NO                    /*휴대전화        */
                    , A.EMAIL_ADDR                    /*이메일        */
                    , A.CORP_DIV_YN                    /*법인여부        */
                    , A.FAX_NO                    /*팩스번호        */
                    , A.ZIP_CD
                    , A.ADDR_CTNTS                    /*주소        */
                    , A.ADDR_2_CTNTS                    /* 상세 주소        */
                    , A.BANK_NM                    /*은행명        */
                    , DAMO.DECRYPT_VAR_B64('AES_256', A.BANK_NO  ,'')  BANK_NO                    /*계좌번호        */
                    , A.WLOUNGE_CD                    /*웰라운지        */
                    , A.REGR_ID                    /*등록자        */
                    , TO_CHAR(A.REG_DT,'YYYYMMDDHH24MISS')    REG_DT                    /*등록일시        */
                    , A.AMDR_ID                    /*수정자        */
                    , TO_CHAR(A.AMD_DT,'YYYYMMDDHH24MISS')    AMD_DT                    /*수정일시        */
                    , A.STATUS_CD                    /*상태        */
                    , TO_CHAR(A.LEAVE_DT,'YYYYMMDDHH24MISS')    LEAVE_DT                    /*탈퇴일자        */
                    , A.PUB_BIZR_BAS_NO                    /*공유사업자기본번호        */
                    , A.BIZR_FILE_CD                    /*사업자번호 파일번호        */
                    , A.BANK_FILE_CD                    /*계좌번호 파일번호        */
    </sql>
    
     <sql id="sqlContactInfo">
    	SELECT A.ITG_CUST_NO
             , MAX(DECODE(CNTPLC_TYPE_CD,'001',CNTPLC_TYPE_CD,NULL)) CNTPLC_TYPE_CD_001
             , DAMO.DECRYPT_VAR_B64('AES_256',MAX(DECODE(CNTPLC_TYPE_CD,'001',TEL_NO,NULL)),'') TEL_NO_001
             , MAX(DECODE(CNTPLC_TYPE_CD,'001',TEL_BK_DGT_NO,NULL)) TEL_BK_DGT_NO_001
             , MAX(DECODE(CNTPLC_TYPE_CD,'001',ZIP_CD,NULL)) ZIP_CD_001
             , MAX(DECODE(CNTPLC_TYPE_CD,'001',ADDR_1_CTNTS,NULL)) ADDR_1_CTNTS_001
             , DAMO.DECRYPT_VAR_B64('AES_256',MAX(DECODE(CNTPLC_TYPE_CD,'001',ADDR_2_CTNTS,NULL)),'') ADDR_2_CTNTS_001
             , MAX(DECODE(CNTPLC_TYPE_CD,'001',DISTRCT_CD,NULL)) DISTRCT_CD_001
             , MAX(DECODE(CNTPLC_TYPE_CD,'002',CNTPLC_TYPE_CD,NULL)) CNTPLC_TYPE_CD_002
             , DAMO.DECRYPT_VAR_B64('AES_256',MAX(DECODE(CNTPLC_TYPE_CD,'002',TEL_NO,NULL)),'') TEL_NO_002
             , MAX(DECODE(CNTPLC_TYPE_CD,'002',TEL_BK_DGT_NO,NULL)) TEL_BK_DGT_NO_002
             , MAX(DECODE(CNTPLC_TYPE_CD,'002',ZIP_CD,NULL)) ZIP_CD_002
             , MAX(DECODE(CNTPLC_TYPE_CD,'002',ADDR_1_CTNTS,NULL)) ADDR_1_CTNTS_002
             , DAMO.DECRYPT_VAR_B64('AES_256',MAX(DECODE(CNTPLC_TYPE_CD,'002',ADDR_2_CTNTS,NULL)),'') ADDR_2_CTNTS_002
             , MAX(DECODE(CNTPLC_TYPE_CD,'002',DISTRCT_CD,NULL)) DISTRCT_CD_002
             , MAX(DECODE(CNTPLC_TYPE_CD,'003',CNTPLC_TYPE_CD,NULL)) CNTPLC_TYPE_CD_003
             , DAMO.DECRYPT_VAR_B64('AES_256',MAX(DECODE(CNTPLC_TYPE_CD,'003',TEL_NO,NULL)),'') TEL_NO_003
             , MAX(DECODE(CNTPLC_TYPE_CD,'003',TEL_BK_DGT_NO,NULL)) TEL_BK_DGT_NO_003
             , MAX(DECODE(CNTPLC_TYPE_CD,'003',ZIP_CD,NULL)) ZIP_CD_003
             , MAX(DECODE(CNTPLC_TYPE_CD,'003',ADDR_1_CTNTS,NULL)) ADDR_1_CTNTS_003
             , DAMO.DECRYPT_VAR_B64('AES_256',MAX(DECODE(CNTPLC_TYPE_CD,'003',ADDR_2_CTNTS,NULL)),'') ADDR_2_CTNTS_003
             , MAX(DECODE(CNTPLC_TYPE_CD,'003',DISTRCT_CD,NULL)) DISTRCT_CD_003
             , MAX(DECODE(CNTPLC_TYPE_CD,'004',CNTPLC_TYPE_CD,NULL)) CNTPLC_TYPE_CD_004
             , DAMO.DECRYPT_VAR_B64('AES_256',MAX(DECODE(CNTPLC_TYPE_CD,'004',TEL_NO,NULL)),'') TEL_NO_004
             , MAX(DECODE(CNTPLC_TYPE_CD,'004',TEL_BK_DGT_NO,NULL)) TEL_BK_DGT_NO_004
             , MAX(DECODE(CNTPLC_TYPE_CD,'004',ZIP_CD,NULL)) ZIP_CD_004
             , MAX(DECODE(CNTPLC_TYPE_CD,'004',ADDR_1_CTNTS,NULL)) ADDR_1_CTNTS_004
             , DAMO.DECRYPT_VAR_B64('AES_256',MAX(DECODE(CNTPLC_TYPE_CD,'004',ADDR_2_CTNTS,NULL)),'') ADDR_2_CTNTS_004
             , MAX(DECODE(CNTPLC_TYPE_CD,'004',DISTRCT_CD,NULL)) DISTRCT_CD_004
          FROM (
            SELECT ITG_CUST_NO
                 , CNTPLC_TYPE_CD
                 , TEL_NO
                 , TEL_BK_DGT_NO
                 , ZIP_CD
                 , DISTRCT_CD
                 , ADDR_1_CTNTS
                 , ADDR_2_CTNTS
                 , EMAIL_ADDR
                 , ROW_NUMBER() OVER(PARTITION BY ITG_CUST_NO,CNTPLC_TYPE_CD ORDER BY AMD_DT DESC, REG_DT DESC ) RNUM  
              FROM CRM_CUST_CNTPLC_BAS
             ) A
         WHERE RNUM = 1
         GROUP BY A.ITG_CUST_NO
    </sql>   
    
    
     <sql id="sqlSelectExtCols">
                    , TO_CHAR(A.INDI_INFO_VALID_PERD_STA_DT,'YYYYMMDDHH24MISS')    INDI_INFO_VALID_PERD_STA_DT                    /*개인정보유효기간시작일시        */
                    , TO_CHAR(A.INDI_INFO_VALID_PERD_END_DT,'YYYYMMDDHH24MISS')    INDI_INFO_VALID_PERD_END_DT                    /*개인정보유효기간종료일시        */
                    , TO_CHAR(A.CUST_STATUS_CHNG_DT,'YYYYMMDDHH24MISS')    CUST_STATUS_CHNG_DT                    /*고객상태변경일시        */
                    , TO_CHAR(A.CUST_INFO_CHNG_DT,'YYYYMMDDHH24MISS')    CUST_INFO_CHNG_DT                    /*고객정보변경일시        */
                    , TO_CHAR(A.SMS_RCV_AGREE_DT,'YYYYMMDDHH24MISS')    SMS_RCV_AGREE_DT                    /*SMS수신동의일시        */
                    , TO_CHAR(A.EMAIL_RCV_AGREE_DT,'YYYYMMDDHH24MISS')    EMAIL_RCV_AGREE_DT                    /*이메일수신동의일시        */
                    , TO_CHAR(A.ALRM_TK_RCV_AGREE_DT,'YYYYMMDDHH24MISS')    ALRM_TK_RCV_AGREE_DT                    /*알람톡수신동의일시        */
                    , TO_CHAR(A.PUSH_RCV_AGREE_DT,'YYYYMMDDHH24MISS')    PUSH_RCV_AGREE_DT                    /*PUSH수신동의일시        */
                    , TO_CHAR(A.MSHIP_LAST_LOGIN_DT,'YYYYMMDDHH24MISS')    MSHIP_LAST_LOGIN_DT                    /*멤버십최종로그인일시        */
                    , TO_CHAR(A.MSHIP_LAST_STOR_VISIT_DT,'YYYYMMDDHH24MISS')    MSHIP_LAST_STOR_VISIT_DT                    /*멤버십최종매장방문일시        */
                    , TO_CHAR(A.MSHIP_SBSC_DT,'YYYYMMDDHH24MISS')    MSHIP_SBSC_DT                    /*멤버십가입일시        */
                    , TO_CHAR(A.MSHIP_GRADE_CHNG_DT,'YYYYMMDDHH24MISS')    MSHIP_GRADE_CHNG_DT                    /*멤버십등급변경일시        */
                    , TO_CHAR(A.MSHIP_INFO_CHNG_DT,'YYYYMMDDHH24MISS')    MSHIP_INFO_CHNG_DT                    /*멤버십정보변경일시        */
                    , TO_CHAR(A.MSHIP_LEAVE_DT,'YYYYMMDDHH24MISS')    MSHIP_LEAVE_DT                    /*멤버십탈퇴일시        */
                    , TO_CHAR(A.BLLK_REG_DT,'YYYYMMDDHH24MISS')    BLLK_REG_DT                    /*주의고객등록일시        */
                    , TO_CHAR(A.AMD_DT,'YYYYMMDDHH24MISS')    AMD_DT                    /*수정일시        */
                    , TO_CHAR(A.REG_DT,'YYYYMMDDHH24MISS')    REG_DT                    /*등록일시        */
                    , (SELECT FAMLY_REL_CD FROM CRM_CUST_HSHLD_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND DEL_YN='N' AND  ROWNUM = 1) FAMLY_REL_CD                    /*가족관계코드        */
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU020' AND COMN_CD = A.CUST_STATUS_CD AND  COMN_CD_LVL_NO = 2) CUST_STATUS_CD_NM 
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU030' AND COMN_CD = A.CUST_TYPE_CD AND  COMN_CD_LVL_NO = 2) CUST_TYPE_CD_NM 
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU010' AND COMN_CD = A.CUST_DIV_CD AND  COMN_CD_LVL_NO = 2) CUST_DIV_CD_NM
                    , (SELECT STOR_NM FROM CRM_STOR_BAS WHERE STOR_NO = A.RCMD_STOR_NO AND ROWNUM = 1) RCMD_STOR_NO_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU040' AND COMN_CD = A.FAMLY_REL_CD AND  COMN_CD_LVL_NO = 2) FAMLY_REL_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU050' AND COMN_CD = A.DWEL_NFPY_CD AND  COMN_CD_LVL_NO = 2) DWEL_NFPY_CD_NM
<!--                     , (SELECT LISTAGG( CM.COMN_CD_NM,',') WITHIN GROUP(ORDER BY LVL) FROM  (SELECT REGEXP_SUBSTR(A.INTRST_FILD_CD, '[^,]+', 1, LEVEL) CD, LEVEL LVL  FROM DUAL CONNECT BY REGEXP_SUBSTR(A.INTRST_FILD_CD, '[^,]+', 1, LEVEL) IS NOT NULL) DL, CRM_COMN_CD_BAS CM WHERE CM.COMN_CD = DL.CD AND CM.COMN_CD_LVL_NO = 2 AND CM.TOP_COMN_CD = 'CU060'  ) INTRST_FILD_CD_NM -->
                    , (SELECT GODS_NM FROM CRM_GODS_BAS WHERE GODS_NO = A.REP_GODS_NO ) REP_GODS_NO_NM 
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU060' AND COMN_CD = A.REP_USE_CUST_DIV_CD AND  COMN_CD_LVL_NO = 2) REP_USE_CUST_DIV_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'S000' AND COMN_CD = A.SMS_RCV_AGREE_CHL_CD AND  COMN_CD_LVL_NO = 2) SMS_RCV_AGREE_CHL_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'S000' AND COMN_CD = A.EMAIL_RCV_AGREE_CHL_CD AND  COMN_CD_LVL_NO = 2) EMAIL_RCV_AGREE_CHL_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'S000' AND COMN_CD = A.ALRM_TK_RCV_AGREE_CHL_CD AND  COMN_CD_LVL_NO = 2) ALRM_TK_RCV_AGREE_CHL_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'S000' AND COMN_CD = A.PUSH_RCV_AGREE_CHL_CD AND  COMN_CD_LVL_NO = 2) PUSH_RCV_AGREE_CHL_CD_NM
                    , (SELECT STOR_NM FROM CRM_STOR_BAS WHERE STOR_NO = A.MSHIP_LAST_VISIT_STOR_NO AND ROWNUM = 1) MSHIP_LAST_VISIT_STOR_NO_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'MB010' AND COMN_CD = A.MSHIP_TYPE_CD AND  COMN_CD_LVL_NO = 2) MSHIP_TYPE_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'MB020' AND COMN_CD = A.MSHIP_GRADE_CD AND  COMN_CD_LVL_NO = 2) MSHIP_GRADE_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'S000' AND COMN_CD = A.MSHIP_CHL_CD AND  COMN_CD_LVL_NO = 2) MSHIP_CHL_CD_NM
                    , (SELECT STOR_NM FROM CRM_STOR_BAS WHERE STOR_NO = A.BLLK_REG_STOR_NO AND ROWNUM = 1)  BLLK_REG_STOR_NO_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'S000' AND COMN_CD = A.BLLK_REG_CHL_CD AND  COMN_CD_LVL_NO = 2) BLLK_REG_CHL_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'S000' AND COMN_CD = A.REG_CHL_CD AND  COMN_CD_LVL_NO = 2) REG_CHL_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = A.DISTRCT_CD AND  COMN_CD_LVL_NO = 2) DISTRCT_CD_NM
                    , (SELECT COUNT(1) FROM CRM_BLLK_CUST_HST WHERE ITG_CUST_NO = A.ITG_CUST_NO AND DEL_YN = 'N') BLACK_CNT
                    , (SELECT CARD_BAS_NO FROM  (SELECT CARD_BAS_NO, ROW_NUMBER() OVER (ORDER BY REG_DT DESC) RNUM FROM CRM_CARD_PBLS_HST WHERE ITG_CUST_NO = A.ITG_CUST_NO  ) WHERE RNUM =1 ) CARD_NO
                    , (SELECT COUNT(1) FROM CRM_COUPN_PBLS_HST WHERE ITG_CUST_NO = A.ITG_CUST_NO AND COUPN_BOOK_HST_SEQ IS NULL AND USE_DT IS NULL AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN NVL(FROM_USE_STD_DAY,'20000101') AND NVL(TO_USE_STD_DAY,'99991231')  ) COUPON_CNT
                    , (SELECT COUNT(1) FROM CRM_COUPN_BOOK_PBLS_HST BK WHERE BK.ITG_CUST_NO = A.ITG_CUST_NO AND BK.DEL_YN ='N' AND BK.COUPN_BOOK_HST_SEQ IN ( SELECT COUPN_BOOK_HST_SEQ FROM CRM_COUPN_PBLS_HST WHERE ITG_CUST_NO =  BK.ITG_CUST_NO AND USE_DT IS NULL AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN NVL(FROM_USE_STD_DAY,'20000101') AND NVL(TO_USE_STD_DAY,'99991231')   ) ) COUPON_BOOK_CNT
                    , DAMO.DECRYPT_VAR_B64('AES_256',A.EMAIL_ADDR,'') EMAIL_ADDR                    /*이메일주소        */
                    , DAMO.DECRYPT_VAR_B64('AES_256',A.CORP_TEL_NO,'') CORP_TEL_NO                    /*법인전화번호        */
                    , DAMO.DECRYPT_VAR_B64('AES_256',A.PIC_MPHON_NO,'')  PIC_MPHON_NO                    /*담당자이동전화번호        */
                    , DAMO.DECRYPT_VAR_B64('AES_256',A.PIC_EMAIL_ADDR,'')  PIC_EMAIL_ADDR                    /*담당자이메일주소        */
                    , DAMO.DECRYPT_VAR_B64('AES_256',A.ADDR_2_CTNTS,'') ADDR_2_CTNTS                    /*주소2내용        */
                    , NVL((SELECT AGREE_YN INFO_AGREE_YN FROM (SELECT AGREE_YN,REG_DT,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '005' AND ITG_CUST_NO = A.ITG_CUST_NO) A WHERE RNUM = 1),'N')  INFO_AGREE_YN
                    , (SELECT TO_CHAR(REG_DT,'YYYYMMDDHH24MISS') INFO_AGREE_DT FROM (SELECT AGREE_YN,REG_DT,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '005' AND ITG_CUST_NO = A.ITG_CUST_NO) A WHERE RNUM = 1)  INFO_AGREE_DT
                    , (SELECT CHL_CD FROM (SELECT AGREE_YN,REG_DT,REG_CHL_CD CHL_CD,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '005' AND ITG_CUST_NO = A.ITG_CUST_NO) A WHERE RNUM = 1)  INFO_AGREE_CHL_CD
                    , (SELECT COMN_CD_NM FROM (SELECT AGREE_YN,REG_DT,REG_CHL_CD CHL_CD ,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '005' AND ITG_CUST_NO = A.ITG_CUST_NO) M,CRM_COMN_CD_BAS B WHERE RNUM = 1 AND B.TOP_COMN_CD = 'S000' AND B.COMN_CD = M.CHL_CD AND  B.COMN_CD_LVL_NO = 2 )  INFO_AGREE_CHL_CD_NM
                    , (SELECT CPRT_CMP_NO FROM (SELECT ITG_CUST_NO, CPRT_CMP_IDFY_NO,CPRT_CMP_NO ,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO ORDER BY REG_DT DESC) RNUM FROM CRM_CRPT_CMP_EXECVDEMP_BAS ) WHERE ITG_CUST_NO = A.ITG_CUST_NO AND RNUM =1) CPRT_CMP_NO
                    , (SELECT CMP.CPRT_CMP_NM FROM (SELECT ITG_CUST_NO, CPRT_CMP_IDFY_NO,CPRT_CMP_NO ,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO ORDER BY REG_DT DESC) RNUM FROM CRM_CRPT_CMP_EXECVDEMP_BAS ) EX, CRM_CRPT_CMP_BAS CMP WHERE EX.ITG_CUST_NO = A.ITG_CUST_NO AND EX.CPRT_CMP_NO= CMP.CPRT_CMP_NO AND EX.RNUM = 1) CPRT_CMP_NM   
                    , (SELECT AGREE_YN MARKETING_YN FROM (SELECT AGREE_YN,REG_DT,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '003' AND ITG_CUST_NO = A.ITG_CUST_NO) A WHERE RNUM = 1)  MARKETING_AGREE_YN
                    , (SELECT TO_CHAR(REG_DT,'YYYYMMDDHH24MISS') FROM (SELECT AGREE_YN,REG_DT,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '003' AND ITG_CUST_NO = A.ITG_CUST_NO) A WHERE RNUM = 1)  MARKETING_AGREE_DT
                    , (SELECT CHL_CD FROM (SELECT AGREE_YN,REG_DT,REG_CHL_CD CHL_CD,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '003' AND ITG_CUST_NO = A.ITG_CUST_NO) A WHERE RNUM = 1)  MARKETING_AGREE_CHL_CD
                    , (SELECT COMN_CD_NM FROM (SELECT AGREE_YN,REG_DT,REG_CHL_CD CHL_CD ,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '003' AND ITG_CUST_NO = A.ITG_CUST_NO) M,CRM_COMN_CD_BAS B WHERE RNUM = 1 AND B.TOP_COMN_CD = 'S000' AND B.COMN_CD = M.CHL_CD AND  B.COMN_CD_LVL_NO = 2 )  MARKETING_AGREE_CHL_CD_NM
      
         
                    , DAMO.DECRYPT_VAR_B64('AES_256',A.MPHON_NO,'')  MPHON_NO                    /*이동전화번호        */
                    , A.MPHON_BK_DGT_NO                    /*이동전화뒤자리번호        */
                    
                    
    </sql>
          
        
    <sql id="sqlConditions">
        <where>
            <if test="id != null and id != ''">
                      AND A.ID              =       #{id}
            </if>
            <if test="pwd != null and pwd != ''">
                      AND A.PWD             =       #{pwd}
            </if>
            <if test="bizrNm != null and bizrNm != ''">
                      AND A.BIZR_NM         =       #{bizrNm}
            </if>
            <if test="bizrNo != null and bizrNo != ''">
                      AND A.BIZR_NO         =       #{bizrNo}
            </if>
            <if test="mphonNo != null and mphonNo != ''">
                      AND A.MPHON_NO        =     DAMO.ENCRYPT_VAR_B64('AES_256',#{mphonNo},'')
            </if>
            <if test="emailAddr != null and emailAddr != ''">
                      AND A.EMAIL_ADDR      =       #{emailAddr}
            </if>
            <if test="corpDivYn != null and corpDivYn != ''">
                      AND A.CORP_DIV_YN     =       #{corpDivYn}
            </if>
            <if test="faxNo != null and faxNo != ''">
                      AND A.FAX_NO          =       #{faxNo}
            </if>
            <if test="addrCtnts != null and addrCtnts != ''">
                      AND A.ADDR_CTNTS      =       #{addrCtnts}
            </if>
            <if test="bankNm != null and bankNm != ''">
                      AND A.BANK_NM         =       #{bankNm}
            </if>
            <if test="bankNo != null and bankNo != ''">
                      AND A.BANK_NO         =       DAMO.ENCRYPT_VAR_B64('AES_256',#{bankNo},'')
            </if>
            <if test="wloungeCd != null and wloungeCd != ''">
                      AND A.WLOUNGE_CD        =       #{wloungeCd}
            </if>
            <if test="statusCd != null and statusCd != ''">
                <choose>
                    <when test="statusCd instanceof String">
                        AND A.STATUS_CD       =       #{statusCd}
                    </when>
                    <otherwise>
                        AND A.STATUS_CD       IN
                        <foreach item="item" index="index" collection="statusCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="leaveDt != null and leaveDt != ''">
                      AND A.LEAVE_DT        =       TO_DATE(#{leaveDt},'YYYYMMDDHH24MISS')
            </if>
            <if test="pubBizrBasNo != null and pubBizrBasNo != ''">
                      AND A.PUB_BIZR_BAS_NO      =       #{pubBizrBasNo}
            </if>
            <if test="bizrFileCd != null and bizrFileCd != ''">
                <choose>
                    <when test="bizrFileCd instanceof String">
                        AND A.BIZR_FILE_CD    =       #{bizrFileCd}
                    </when>
                    <otherwise>
                        AND A.BIZR_FILE_CD    IN
                        <foreach item="item" index="index" collection="bizrFileCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="bankFileCd != null and bankFileCd != ''">
                <choose>
                    <when test="bankFileCd instanceof String">
                        AND A.BANK_FILE_CD    =       #{bankFileCd}
                    </when>
                    <otherwise>
                        AND A.BANK_FILE_CD    IN
                        <foreach item="item" index="index" collection="bankFileCd" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
        </where>
    </sql>
    <select id="selectListCount" resultType="int">
                SELECT /* com.ceragem.api.pub.dao.PubBizrBasDao.selectListCount */ COUNT(1)
                 FROM PUB_BIZR_BAS A
        <include refid="sqlConditions"/>
    </select>
    <select id="selectList" resultType="com.ceragem.api.pub.model.PubBizrBasVo">
        <include refid="pagingHeader"/>
               SELECT /* com.ceragem.api.pub.dao.PubBizrBasDao.selectList */ <include refid="sqlSelectCols"/>
                 FROM PUB_BIZR_BAS A
        <include refid="sqlConditions"/>
               ORDER BY REG_DT DESC
        <include refid="pagingFooter"/>
    </select>
    <select id="select" resultType="com.ceragem.api.pub.model.PubBizrBasVo">
               SELECT /* com.ceragem.api.pub.dao.PubBizrBasDao.select */ <include refid="sqlSelectCols"/>
                 FROM PUB_BIZR_BAS A
        <include refid="sqlPkConditions"/>
    </select>
    <insert id="insert">
                INSERT /* com.ceragem.api.pub.dao.PubBizrBasDao.insert */ INTO PUB_BIZR_BAS (
        <include refid="sqlCols"/>
                 ) VALUES (
                       #{id}
                     , #{pwd}
                     , #{bizrNm}
                     , #{bizrNo}
                     , DAMO.ENCRYPT_VAR_B64('AES_256',#{mphonNo},'')
                     , #{emailAddr}
                     , NVL(#{corpDivYn},'N')
                     , #{faxNo}
                     , #{zipCd}
                     , #{addrCtnts}
                     , #{addr2Ctnts}
                     , #{bankNm}
                     , #{bankNo}
                     , #{wloungeCd}
                     , #{regrId}
                     , SYSDATE
                     , #{amdrId}
                     , SYSDATE
                     , #{statusCd}
                     , TO_DATE(#{leaveDt},'YYYYMMDDHH24MISS')
                     , FN_CRM_AUTO_SEQ('PUB')
                     , #{bizrFileCd}
                     , #{bankFileCd}
                 )
    </insert>
    <update id="update">
               UPDATE /* com.ceragem.api.pub.dao.PubBizrBasDao.update */ PUB_BIZR_BAS
                  SET
                  	
                     AMDR_ID                                 =         #{amdrId}
                    , AMD_DT                                  =         SYSDATE
                   
                  	 
                 	 <if test="statusCd == '005'">
                 	 	, STATUS_CD                               =       #{statusCd}
                    	, LEAVE_DT                                =       SYSDATE
                     </if>
                     
                    <if test="pwd != null and pwd != ''">        
                    , PWD                                     =         #{pwd}
                    </if>
                    
                     <if test="bizrNm != null and bizrNm != ''">   
                    , BIZR_NM                                 =         #{bizrNm}
                     </if>
                    
                     <if test="bizrNo != null and bizrNo != ''">   
                    , BIZR_NO                                 =         #{bizrNo}
                     </if>
                    
                     <if test="mphonNo != null and mphonNo != ''">   
                    , MPHON_NO                                =         DAMO.ENCRYPT_VAR_B64('AES_256',#{mphonNo},'')
                     </if>
                    
                     <if test="emailAddr != null and emailAddr != ''">   
                    , EMAIL_ADDR                              =         #{emailAddr}
                     </if>
                    
                     <if test="corpDivYn != null and corpDivYn != ''">   
                    , CORP_DIV_YN                             =         NVL(#{corpDivYn},'N')
                     </if>
                    
                     <if test="faxNo != null and faxNo != ''">   
                    , FAX_NO                                  =         #{faxNo}
                     </if>
                     
                    <if test="zipCd != null and zipCd != ''">   
                    , ZIP_CD                              =         #{zipCd}
                     </if>
                    
                     <if test="addrCtnts != null and addrCtnts != ''">   
                    , ADDR_CTNTS                              =         #{addrCtnts}
                     </if>
                     
                     <if test="addr2Ctnts != null and addr2Ctnts != ''">   
                    , ADDR_2_CTNTS                              =         #{addr2Ctnts}
                     </if>
                    
                     <if test="bankNm != null and bankNm != ''">   
                    , BANK_NM                                 =         #{bankNm}
                     </if>
                    
                     <if test="bankNo != null and bankNo != ''">   
                    , BANK_NO                                 =         DAMO.ENCRYPT_VAR_B64('AES_256',#{bankNo},'')
                     </if>
                    
                     <if test="wloungeCd != null and wloungeCd != ''">   
                    , WLOUNGE_CD                                =         #{wloungeCd}
                     </if>
                    
                    
                     <if test="bizrFileCd != null and bizrFileCd != ''">   
                    , BIZR_FILE_CD                            =         #{bizrFileCd}
                     </if>
                    
                     <if test="bankFileCd != null and bankFileCd != ''">   
                    , BANK_FILE_CD                            =         #{bankFileCd}
                     </if>
                    
                    
                    
        <include refid="sqlUpdateConditions"/>
    </update>
    
    <delete id="delete">
               DELETE /* com.ceragem.api.pub.dao.PubBizrBasDao.delete */
                 FROM PUB_BIZR_BAS
        <include refid="sqlUpdateConditions"/>
    </delete>
    
    
    
    <sql id="sqlSelectBaseCols">
                      A.ITG_CUST_NO                    /*통합고객번호        */
                    , A.CUST_NM                    /*고객명        */
                    , A.CORP_DIV_YN                    /*법인구분여부        */
                    , A.GNDR_CD                    /*성별코드        */
                    , A.BIRTHDAY                    /*생년월일        */
                    , A.BIZ_NO                    /*사업자등록번호        */
                    , A.CORP_REG_NO                    /*법인등록번호        */
                    , A.FORN_YN                    /*외국인여부        */
                    , A.REP_NM                    /*대표명        */
                    , A.PIC_NM                    /*담당자명        */
                    , A.PIC_MPHON_BK_DGT_NO                    /*담당자이동전화뒤자리번호        */
                    , A.CUST_STATUS_CD                    /* 고객상태코드        */
                    , A.CUST_TYPE_CD                    /*고객유형코드        */
                    , A.CUST_DIV_CD                    /*고객구분코드        */
                    , A.DISTRCT_CD                  /*지역코드        */
                    , A.ZIP_CD                    /*우편번호        */
                    , A.ADDR_1_CTNTS                    /*주소1내용        */
                    , A.RCMD_STOR_NO                    /*추천매장번호        */
                    , A.RCMDR_CUST_NO                    /*추천인고객번호        */
                    , A.RCMD_EXECVDEMP_NO                    /*추천임직원번호        */
                    , A.MARRY_YN                    /*결혼여부        */
                    , A.REP_HSHLD_NO                    /*대표가구번호        */
                    , A.DWEL_NFPY_CD                    /*주거평수코드        */
                    , A.INTRST_FILD_CD                    /*관심분야코드        */
                    , A.REP_GODS_NO                    /*대표제품번호        */
                    , A.REP_USE_CUST_DIV_CD                    /*대표사용고객구분코드        */
                    , A.SMS_RCV_AGREE_YN                    /*SMS수신동의여부        */
                    , A.SMS_RCV_AGREE_CHL_CD                    /*SMS수신동의채널코드        */
                    , A.EMAIL_RCV_AGREE_YN                    /*이메일수신동의여부        */
                    , A.EMAIL_RCV_AGREE_CHL_CD                    /*이메일수신동의채널코드        */
                    , A.ALRM_TK_RCV_AGREE_YN                    /*알람톡수신동의여부        */
                    , A.ALRM_TK_RCV_AGREE_CHL_CD                    /*알람톡수신동의채널코드        */
                    , A.PUSH_RCV_AGREE_YN                    /*PUSH수신동의여부        */
                    , A.PUSH_RCV_AGREE_CHL_CD                    /*PUSH수신동의채널코드        */
                    , A.CI_CERTF_YN                    /*CI인증여부        */
                    , A.CI                    /*CI        */
                    , A.DI_CERTF_YN                    /*DI인증여부        */
                    , A.DI                    /*DI        */
                    , A.RCV_RFSL_YN                    /*수신거부여부        */
                    , A.MSHIP_SBSC_YN                    /*멤버십가입여부        */
                    , A.MSHIP_LOGIN_ID                    /*멤버십로그인ID        */
                    , A.MSHIP_SBT_NO                    /*멤버십대체번호        */
                    , A.MSHIP_LOGIN_PWD                    /*멤버십로그인비밀번호        */
                    , A.MSHIP_LAST_LOGIN_IP_ADDR                    /*멤버십최종로그인IP주소        */
                    , A.MSHIP_LAST_VISIT_STOR_NO                    /*멤버십최종방문매장번호        */
                    , A.MSHIP_TYPE_CD                    /*멤버십유형코드        */
                    , A.MSHIP_GRADE_CD                    /*멤버십등급코드        */
                    , A.MSHIP_INFO_CONFR_EXECVDEMP_NO                    /*멤버십정보확인자임직원번호        */
                    , A.CPRT_EXECVDEMP_NO                    /*제휴임직원번호        */
                    , A.EXTNC_POINT_LMT_SCORE                    /*소멸포인트한도점수        */
                    , A.ACCUM_POINT_LMT_SCORE                    /*적립포인트한도점수        */
                    , A.REMAIN_POINT_SCORE                    /*잔여포인트점수        */
                    , A.MSHIP_CHL_CD                    /*멤버십채널코드        */
                    , A.BLLK_REG_STOR_NO                    /*주의고객등록매장번호        */
                    , A.BLLKMSHP_YN                    /*주의고객여부        */
                    , A.BLLK_REG_CHL_CD                    /*주의고객등록채널코드        */
                    , A.BLLK_REG_WHY_CTNTS                    /*주의고객등록사유내용        */
                    , A.MSHIP_EXPT_GRADE_CD                    /*멤버십예정등급코드        */
                    , A.MSHIP_ADVNCMT_SCORE                    /*멤버십승급점수        */
                    , A.PRTCT_FAMLY_YN                /*보호가족여부*/
                    , A.REG_CHL_CD                    /*등록채널코드        */
                    , A.DORM_PERD_CD    /*휴면기간코드*/
                    , A.APP_PUSH_TOKN
					, A.EXPRN_YN
                    , A.SALE_AGGR_AMT
                    , A.AMDR_ID                    /*수정자ID        */
                    , A.REGR_ID                    /*등록자ID        */
                    , A.MPHON_NO  MPHON_NO_ENC_VAL
            
                    
    </sql>
    
    
    
    <select id="getCustList" resultType="com.ceragem.api.crm.model.CrmCustVo" >
    
    
    
    SELECT /*+ LEADING(A) USE_NL(A B) */ /* com.ceragem.api.crm.dao.CrmCustBasDao.selectList */ <include refid="sqlSelectBaseCols"/><include refid="sqlSelectExtCols"/>
          , B.TEL_NO_001  INST_TEL_NO
          , B.DISTRCT_CD_001 INST_DISTRCT_CD
          , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = B.DISTRCT_CD_001 AND  COMN_CD_LVL_NO = 2) INST_DISTRCT_CD_NM
          , B.ZIP_CD_001 INST_ZIP_CD
          , B.ADDR_1_CTNTS_001 INST_ADDR1
          , B.ADDR_2_CTNTS_001 INST_ADDR2
          , B.TEL_NO_002 JOB_TEL_NO
          , B.DISTRCT_CD_002 JOB_DISTRCT_CD
          , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = B.DISTRCT_CD_002 AND  COMN_CD_LVL_NO = 2) JOB_DISTRCT_CD_NM
          , B.ZIP_CD_002 JOB_ZIP_CD
          , B.ADDR_1_CTNTS_002 JOB_ADDR1
          , B.ADDR_2_CTNTS_002 JOB_ADDR2
          , B.TEL_NO_003 HOME_TEL_NO
          , B.DISTRCT_CD_003 HOME_DISTRCT_CD
          , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = B.DISTRCT_CD_003 AND  COMN_CD_LVL_NO = 2) HOME_DISTRCT_CD_NM
          , B.ZIP_CD_003 HOME_ZIP_CD
          , B.ADDR_1_CTNTS_003 HOME_ADDR1
          , B.ADDR_2_CTNTS_003 HOME_ADDR2
       
       FROM (
       
       
    	 <include refid="pagingHeader"/>
    	 
     		SELECT /* com.ceragem.api.pub.dao.pub.getCustList */ 
     	
     		<include refid="sqlSelectBaseCols" />
     		
     		, A.EMAIL_ADDR                    /*이메일주소        */
                    , A.CORP_TEL_NO                    /*법인전화번호        */
                    , A.PIC_MPHON_NO                    /*담당자이동전화번호        */
                    , A.PIC_EMAIL_ADDR                    /*담당자이메일주소        */
                    , A.ADDR_2_CTNTS                    /*주소2내용        */
                    , A.MPHON_BK_DGT_NO
                    , A.MPHON_NO
                    , A.INDI_INFO_VALID_PERD_STA_DT                    /*개인정보유효기간시작일시        */
                    , A.INDI_INFO_VALID_PERD_END_DT                    /*개인정보유효기간종료일시        */
                    , A.CUST_STATUS_CHNG_DT                    /*고객상태변경일시        */
                    , A.CUST_INFO_CHNG_DT                    /*고객정보변경일시        */
                    , A.SMS_RCV_AGREE_DT                    /*SMS수신동의일시        */
                    , A.EMAIL_RCV_AGREE_DT                    /*이메일수신동의일시        */
                    , A.ALRM_TK_RCV_AGREE_DT                    /*알람톡수신동의일시        */
                    , A.PUSH_RCV_AGREE_DT                    /*PUSH수신동의일시        */
                    , A.MSHIP_LAST_LOGIN_DT                    /*멤버십최종로그인일시        */
                    , A.MSHIP_LAST_STOR_VISIT_DT                    /*멤버십최종매장방문일시        */
                    , A.MSHIP_SBSC_DT                    /*멤버십가입일시        */
                    , A.MSHIP_GRADE_CHNG_DT                    /*멤버십등급변경일시        */
                    , A.MSHIP_INFO_CHNG_DT                    /*멤버십정보변경일시        */
                    , A.MSHIP_LEAVE_DT                    /*멤버십탈퇴일시        */
                    , A.BLLK_REG_DT                    /*주의고객등록일시        */
                    , A.AMD_DT                    /*수정일시        */
                    , A.REG_DT                    /*등록일시        */
                    , A.FAMLY_REL_CD
     			
     	   FROM PUB_BIZR_BAS B	
           LEFT JOIN  PUB_BIZR_ITG_REL C  ON B.PUB_BIZR_BAS_NO  = C.PUB_BIZR_BAS_NO
           LEFT JOIN  CRM_CUST_BAS A ON C.ITG_CUST_NO = A.ITG_CUST_NO
	       WHERE  B.ID  =  #{id}
					
           <if test="itgCustNo != null and itgCustNo != ''">   
                AND C.ITG_CUST_NO              =         #{itgCustNo}
           </if>
           
           <if test="custNm != null and custNm != ''">   
                AND A.CUST_NM                  =         #{custNm}
           </if>
           
           <if test="mphonNo != null and mphonNo != ''">   
                AND A.MPHON_NO                 =         #{mphonNo}
           </if>
           
          <include refid="pagingFooter"/>    
          
          ) A LEFT JOIN  (<include refid="sqlContactInfo"/>) B ON A.ITG_CUST_NO= B.ITG_CUST_NO
        ORDER BY A.ITG_CUST_NO DESC
        
           
    </select>
    
    <select id="getCustListCount" resultType="int" >
    	
     	SELECT /* com.ceragem.api.pub.dao.pub.getCustListCount */ 
     	
     		COUNT(*)
     			
     	   FROM PUB_BIZR_BAS B	
           LEFT JOIN  PUB_BIZR_ITG_REL C  ON B.PUB_BIZR_BAS_NO  = C.PUB_BIZR_BAS_NO
           LEFT JOIN  CRM_CUST_BAS A ON C.ITG_CUST_NO = A.ITG_CUST_NO
	       WHERE  B.ID  =  #{id}
					
           <if test="itgCustNo != null and itgCustNo != ''">   
                AND C.ITG_CUST_NO              =         #{itgCustNo}
           </if>
           
           <if test="custNm != null and custNm != ''">   
                AND A.CUST_NM                  =         #{custNm}
           </if>
           
           <if test="mphonNo != null and mphonNo != ''">   
                AND A.MPHON_NO                 =         #{mphonNo}
           </if>
               
    </select>
    
    
    <sql id="sqlPubCols">
                      PUB_MSHP_REL_INNT_NO                    /*공유회원관계고유번호        */
                    , ITG_CUST_NO                    /*통합고객번호        */
                    , REGR_ID                    /*등록자        */
                    , REG_DT                    /*등록일시        */
                    , PUB_BIZR_BAS_NO                    /*공유사업자고유번호        */
    </sql>
    
    
     <insert id="insertPubMem">
                INSERT /* com.ceragem.crm.pub.dao.PubBizrBasDao.insertPubMem */ INTO PUB_BIZR_ITG_REL (
        <include refid="sqlPubCols"/>
                 ) VALUES (
                       FN_CRM_AUTO_SEQ('PBA')
                     , #{itgCustNo}
                     , #{regrId}
                     , SYSDATE
                     , #{pubBizrBasNo}
                 )
    </insert>
    
    <select id="selectChkPub" resultType="com.ceragem.api.pub.model.PubBizrBasSo2" >
           SELECT /* com.ceragem.api.pub.dao.PubBizrBasDao.selectChkPub */ 
				A.ITG_CUST_NO, B.PUB_BIZR_BAS_NO
            FROM CRM_CUST_BAS A 
            LEFT JOIN PUB_BIZR_ITG_REL B  ON A.ITG_CUST_NO = B.ITG_CUST_NO
        	WHERE A.ITG_CUST_NO = #{itgCustNo}
    </select>
    
    

    
    <select id="selectChkWlng" resultType="int" >
      	SELECT /* com.ceragem.api.pub.dao.PubBizrBasDao.selectChkWlng */ COUNT(*) 
      		 FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'WLNG'  AND COMN_CD = #{wloungeCd}
    </select>
    
    <update id="updateFileCd">
    /* com.ceragem.api.pub.dao.PubBizrBasDao.updateFileCd */ 
            UPDATE PUB_BIZR_BAS 
               SET BIZR_FILE_CD = NVL(#{bizrFileCd},BIZR_FILE_CD)
                 , BANK_FILE_CD = NVL( #{bankFileCd},BANK_FILE_CD)
             WHERE PUB_BIZR_BAS_NO = #{pubBizrBasNo}
    </update>
</mapper>
