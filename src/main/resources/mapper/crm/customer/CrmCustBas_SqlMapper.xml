<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ceragem.api.crm.dao.CrmCustBasDao">
    <sql id="sqlPkConditions">
                WHERE ITG_CUST_NO       =       #{itgCustNo}
    </sql>
    <sql id="sqlDormCols">
                      ITG_CUST_NO                    /*통합고객번호        */
                    , CORP_DIV_YN                    /*법인구분여부        */
                    , CUST_NM                    /*고객명        */
                    , GNDR_CD                    /*성별코드        */
                    , BIRTHDAY                    /*생년월일        */
                    , BIZ_NO                    /*사업자등록번호        */
                    , CORP_REG_NO                    /*법인등록번호        */
                    , CORP_TEL_NO                    /*법인전화번호        */
                    , FORN_YN                    /*외국인여부        */
                    , REP_NM                    /*대표명        */
                    , MPHON_NO                    /*이동전화번호        */
                    , MPHON_BK_DGT_NO                    /*이동전화뒤자리번호        */
                    , EMAIL_ADDR                    /*이메일주소        */
                    , PIC_NM                    /*담당자명        */
                    , PIC_MPHON_NO                    /*담당자이동전화번호        */
                    , PIC_MPHON_BK_DGT_NO                    /*담당자이동전화뒤자리번호        */
                    , PIC_EMAIL_ADDR                    /*담당자이메일주소        */
                    , INDI_INFO_VALID_PERD_STA_DT                    /*개인정보유효기간시작일시        */
                    , INDI_INFO_VALID_PERD_END_DT                    /*개인정보유효기간종료일시        */
                    , CUST_STATUS_CD                    /*고객상태코드        */
                    , CUST_STATUS_CHNG_DT                    /*고객상태변경일시        */
                    , CUST_INFO_CHNG_DT                    /*고객정보변경일시        */
                    , CUST_TYPE_CD                    /*고객유형코드        */
                    , CUST_DIV_CD                    /*고객구분코드        */
                    , DISTRCT_CD                  /*지역코드        */
                    , ZIP_CD                    /*우편번호        */
                    , ADDR_1_CTNTS                    /*주소1내용        */
                    , ADDR_2_CTNTS                    /*주소2내용        */
                    , RCMD_STOR_NO                    /*추천매장번호        */
                    , RCMDR_CUST_NO                    /*추천인고객번호        */
                    , RCMD_EXECVDEMP_NO                    /*추천임직원번호        */
                    , MARRY_YN                    /*결혼여부        */
                    , REP_HSHLD_NO                    /*대표가구번호        */
                    , FAMLY_REL_CD                    /*가족관계코드        */
                    , DWEL_NFPY_CD                    /*주거평수코드        */
                    , INTRST_FILD_CD                    /*관심분야코드        */
                    , REP_GODS_NO                    /*대표제품번호        */
                    , REP_USE_CUST_DIV_CD                    /*대표사용고객구분코드        */
                    , SMS_RCV_AGREE_YN                    /*SMS수신동의여부        */
                    , SMS_RCV_AGREE_DT                    /*SMS수신동의일시        */
                    , SMS_RCV_AGREE_CHL_CD                    /*SMS수신동의채널코드        */
                    , EMAIL_RCV_AGREE_YN                    /*이메일수신동의여부        */
                    , EMAIL_RCV_AGREE_DT                    /*이메일수신동의일시        */
                    , EMAIL_RCV_AGREE_CHL_CD                    /*이메일수신동의채널코드        */
                    , ALRM_TK_RCV_AGREE_YN                    /*알람톡수신동의여부        */
                    , ALRM_TK_RCV_AGREE_DT                    /*알람톡수신동의일시        */
                    , ALRM_TK_RCV_AGREE_CHL_CD                    /*알람톡수신동의채널코드        */
                    , PUSH_RCV_AGREE_YN                    /*PUSH수신동의여부        */
                    , PUSH_RCV_AGREE_DT                    /*PUSH수신동의일시        */
                    , PUSH_RCV_AGREE_CHL_CD                    /*PUSH수신동의채널코드        */
                    , CI_CERTF_YN                    /*CI인증여부        */
                    , CI                    /*CI        */
                    , DI_CERTF_YN                    /*DI인증여부        */
                    , DI                    /*DI        */
                    , RCV_RFSL_YN                    /*수신거부여부        */
                    , MSHIP_SBSC_YN                    /*멤버십가입여부        */
                    , MSHIP_LOGIN_ID                    /*멤버십로그인ID        */
                    , MSHIP_SBT_NO                    /*멤버십대체번호        */
                    , MSHIP_LOGIN_PWD                    /*멤버십로그인비밀번호        */
                    , MSHIP_LAST_LOGIN_DT                    /*멤버십최종로그인일시        */
                    , MSHIP_LAST_LOGIN_IP_ADDR                    /*멤버십최종로그인IP주소        */
                    , MSHIP_LAST_STOR_VISIT_DT                    /*멤버십최종매장방문일시        */
                    , MSHIP_LAST_VISIT_STOR_NO                    /*멤버십최종방문매장번호        */
                    , MSHIP_TYPE_CD                    /*멤버십유형코드        */
                    , MSHIP_SBSC_DT                    /*멤버십가입일시        */
                    , MSHIP_GRADE_CD                    /*멤버십등급코드        */
                    , MSHIP_GRADE_CHNG_DT                    /*멤버십등급변경일시        */
                    , MSHIP_INFO_CHNG_DT                    /*멤버십정보변경일시        */
                    , MSHIP_INFO_CONFR_EXECVDEMP_NO                    /*멤버십정보확인자임직원번호        */
                    , CPRT_EXECVDEMP_NO                    /*제휴임직원번호        */
                    , MSHIP_LEAVE_DT                    /*멤버십탈퇴일시        */
                    , EXTNC_POINT_LMT_SCORE                    /*소멸포인트한도점수        */
                    , ACCUM_POINT_LMT_SCORE                    /*적립포인트한도점수        */
                    , REMAIN_POINT_SCORE                    /*잔여포인트점수        */
                    , MSHIP_CHL_CD                    /*멤버십채널코드        */
                    , BLLK_REG_STOR_NO                    /*주의고객등록매장번호        */
                    , BLLKMSHP_YN                    /*주의고객여부        */
                    , BLLK_REG_CHL_CD                    /*주의고객등록채널코드        */
                    , BLLK_REG_WHY_CTNTS                    /*주의고객등록사유내용        */
                    , BLLK_REG_DT                    /*주의고객등록일시        */
                    , PRTCT_FAMLY_YN                /*보호가족여부*/
                    , REG_CHL_CD                    /*등록채널코드        */
                    , DORM_PERD_CD    /*휴면기간코드*/
                    , APP_PUSH_TOKN
					, EXPRN_YN
                    , SALE_AGGR_AMT
    </sql>
    <sql id="sqlCols">
                      <include refid="sqlDormCols"/>
                    , AMDR_ID                    /*수정자ID        */
                    , AMD_DT                    /*수정일시        */
                    , REGR_ID                    /*등록자ID        */
                    , REG_DT                    /*등록일시        */
    </sql>
    <sql id="sqlSelectBaseCols">
                      A.ITG_CUST_NO                    /*통합고객번호        */
                    , A.CORP_DIV_YN                    /*법인구분여부        */
                    , A.CUST_NM                    /*고객명        */
                    , A.GNDR_CD                    /*성별코드        */
                    , A.BIRTHDAY                    /*생년월일        */
                    , A.BIZ_NO                    /*사업자등록번호        */
                    , A.CORP_REG_NO                    /*법인등록번호        */
                    , A.FORN_YN                    /*외국인여부        */
                    , A.REP_NM                    /*대표명        */
                    , A.PIC_NM                    /*담당자명        */
                    , A.PIC_MPHON_BK_DGT_NO                    /*담당자이동전화뒤자리번호        */
                    , A.CUST_STATUS_CD                    /* 고객상태코드        */
                    , A.CUST_TYPE_CD                    /*고객유형코드        */
                    , A.CUST_DIV_CD                    /*고객구분코드        */
                    , A.DISTRCT_CD                  /*지역코드        */
                    , A.ZIP_CD                    /*우편번호        */
                    , A.ADDR_1_CTNTS                    /*주소1내용        */
                    , A.RCMD_STOR_NO                    /*추천매장번호        */
                    , A.RCMDR_CUST_NO                    /*추천인고객번호        */
                    , A.RCMD_EXECVDEMP_NO                    /*추천임직원번호        */
                    , A.MARRY_YN                    /*결혼여부        */
                    , A.REP_HSHLD_NO                    /*대표가구번호        */
                    , A.DWEL_NFPY_CD                    /*주거평수코드        */
                    , A.INTRST_FILD_CD                    /*관심분야코드        */
                    , A.REP_GODS_NO                    /*대표제품번호        */
                    , A.REP_USE_CUST_DIV_CD                    /*대표사용고객구분코드        */
                    , A.SMS_RCV_AGREE_YN                    /*SMS수신동의여부        */
                    , A.SMS_RCV_AGREE_CHL_CD                    /*SMS수신동의채널코드        */
                    , A.EMAIL_RCV_AGREE_YN                    /*이메일수신동의여부        */
                    , A.EMAIL_RCV_AGREE_CHL_CD                    /*이메일수신동의채널코드        */
                    , A.ALRM_TK_RCV_AGREE_YN                    /*알람톡수신동의여부        */
                    , A.ALRM_TK_RCV_AGREE_CHL_CD                    /*알람톡수신동의채널코드        */
                    , A.PUSH_RCV_AGREE_YN                    /*PUSH수신동의여부        */
                    , A.PUSH_RCV_AGREE_CHL_CD                    /*PUSH수신동의채널코드        */
                    , A.CI_CERTF_YN                    /*CI인증여부        */
                    , A.CI                    /*CI        */
                    , A.DI_CERTF_YN                    /*DI인증여부        */
                    , A.DI                    /*DI        */
                    , A.RCV_RFSL_YN                    /*수신거부여부        */
                    , A.MSHIP_SBSC_YN                    /*멤버십가입여부        */
                    , A.MSHIP_LOGIN_ID                    /*멤버십로그인ID        */
                    , A.MSHIP_SBT_NO                    /*멤버십대체번호        */
                    , A.MSHIP_LOGIN_PWD                    /*멤버십로그인비밀번호        */
                    , A.MSHIP_LAST_LOGIN_IP_ADDR                    /*멤버십최종로그인IP주소        */
                    , A.MSHIP_LAST_VISIT_STOR_NO                    /*멤버십최종방문매장번호        */
                    , A.MSHIP_TYPE_CD                    /*멤버십유형코드        */
                    , A.MSHIP_GRADE_CD                    /*멤버십등급코드        */
                    , A.MSHIP_INFO_CONFR_EXECVDEMP_NO                    /*멤버십정보확인자임직원번호        */
                    , A.CPRT_EXECVDEMP_NO                    /*제휴임직원번호        */
                    , A.EXTNC_POINT_LMT_SCORE                    /*소멸포인트한도점수        */
                    , A.ACCUM_POINT_LMT_SCORE                    /*적립포인트한도점수        */
                    , A.REMAIN_POINT_SCORE                    /*잔여포인트점수        */
                    , A.MSHIP_CHL_CD                    /*멤버십채널코드        */
                    , A.BLLK_REG_STOR_NO                    /*주의고객등록매장번호        */
                    , A.BLLKMSHP_YN                    /*주의고객여부        */
                    , A.BLLK_REG_CHL_CD                    /*주의고객등록채널코드        */
                    , A.BLLK_REG_WHY_CTNTS                    /*주의고객등록사유내용        */
                    , A.MSHIP_EXPT_GRADE_CD                    /*멤버십예정등급코드        */
                    , A.MSHIP_ADVNCMT_SCORE                    /*멤버십승급점수        */
                    , A.PRTCT_FAMLY_YN                /*보호가족여부*/
                    , A.REG_CHL_CD                    /*등록채널코드        */
                    , A.DORM_PERD_CD    /*휴면기간코드*/
                    , A.APP_PUSH_TOKN
					, A.EXPRN_YN
                    , A.SALE_AGGR_AMT
                    , A.AMDR_ID                    /*수정자ID        */
                    , A.REGR_ID                    /*등록자ID        */
                    , A.MPHON_NO  MPHON_NO_ENC_VAL
                    
                    
                    
<!--                     ,  <choose> -->
<!--                         <when test="purchaseStartYmd != null and purchaseStartYmd != '' and purchaseEndYmd !=null and purchaseEndYmd !=''"> -->
<!--                       ( -->
<!--                         SELECT SUM(SALE_AMT) -->
<!--                           FROM PIFOWN.IFS_ITG_CUST_STOR_SALE -->
<!--                          WHERE STOR_CD = DECODE(#{storNo},NULL,STOR_CD,#{storNo}) -->
<!--                            AND SALE_DATE BETWEEN #{purchaseStartYmd} AND #{purchaseEndYmd} -->
<!--                            AND ITG_CUST_NO = A.ITG_CUST_NO -->
<!--                       ) -->
<!--                         </when> -->
<!--                         <otherwise>0</otherwise> -->
<!--                       </choose> PURCHASE_AMT -->
                    
    </sql>
    <sql id="sqlSelectEncCols">
                    , '010-****-' || A.MPHON_BK_DGT_NO MPHON_NO                    /*이동전화번호        */
                    , A.MPHON_BK_DGT_NO                    /*이동전화뒤자리번호        */
    </sql>
    <sql id="sqlSelectDecCols">
                    , A.MPHON_NO  MPHON_NO                    /*이동전화번호        */
                    , A.MPHON_BK_DGT_NO                    /*이동전화뒤자리번호        */
                    
                    
    </sql>
    <sql id="sqlSelectExtCols">
                    , TO_CHAR(A.INDI_INFO_VALID_PERD_STA_DT,'YYYYMMDDHH24MISS')    INDI_INFO_VALID_PERD_STA_DT                    /*개인정보유효기간시작일시        */
                    , TO_CHAR(A.INDI_INFO_VALID_PERD_END_DT,'YYYYMMDDHH24MISS')    INDI_INFO_VALID_PERD_END_DT                    /*개인정보유효기간종료일시        */
                    , TO_CHAR(A.CUST_STATUS_CHNG_DT,'YYYYMMDDHH24MISS')    CUST_STATUS_CHNG_DT                    /*고객상태변경일시        */
                    , TO_CHAR(A.CUST_INFO_CHNG_DT,'YYYYMMDDHH24MISS')    CUST_INFO_CHNG_DT                    /*고객정보변경일시        */
                    , TO_CHAR(A.SMS_RCV_AGREE_DT,'YYYYMMDDHH24MISS')    SMS_RCV_AGREE_DT                    /*SMS수신동의일시        */
                    , TO_CHAR(A.EMAIL_RCV_AGREE_DT,'YYYYMMDDHH24MISS')    EMAIL_RCV_AGREE_DT                    /*이메일수신동의일시        */
                    , TO_CHAR(A.ALRM_TK_RCV_AGREE_DT,'YYYYMMDDHH24MISS')    ALRM_TK_RCV_AGREE_DT                    /*알람톡수신동의일시        */
                    , TO_CHAR(A.PUSH_RCV_AGREE_DT,'YYYYMMDDHH24MISS')    PUSH_RCV_AGREE_DT                    /*PUSH수신동의일시        */
                    , TO_CHAR(A.MSHIP_LAST_LOGIN_DT,'YYYYMMDDHH24MISS')    MSHIP_LAST_LOGIN_DT                    /*멤버십최종로그인일시        */
                    , TO_CHAR(A.MSHIP_LAST_STOR_VISIT_DT,'YYYYMMDDHH24MISS')    MSHIP_LAST_STOR_VISIT_DT                    /*멤버십최종매장방문일시        */
                    , TO_CHAR(A.MSHIP_SBSC_DT,'YYYYMMDDHH24MISS')    MSHIP_SBSC_DT                    /*멤버십가입일시        */
                    , TO_CHAR(A.MSHIP_GRADE_CHNG_DT,'YYYYMMDDHH24MISS')    MSHIP_GRADE_CHNG_DT                    /*멤버십등급변경일시        */
                    , TO_CHAR(A.MSHIP_INFO_CHNG_DT,'YYYYMMDDHH24MISS')    MSHIP_INFO_CHNG_DT                    /*멤버십정보변경일시        */
                    , TO_CHAR(A.MSHIP_LEAVE_DT,'YYYYMMDDHH24MISS')    MSHIP_LEAVE_DT                    /*멤버십탈퇴일시        */
                    , TO_CHAR(A.BLLK_REG_DT,'YYYYMMDDHH24MISS')    BLLK_REG_DT                    /*주의고객등록일시        */
                    , TO_CHAR(A.AMD_DT,'YYYYMMDDHH24MISS')    AMD_DT                    /*수정일시        */
                    , TO_CHAR(A.REG_DT,'YYYYMMDDHH24MISS')    REG_DT                    /*등록일시        */
                    , (SELECT FAMLY_REL_CD FROM CRM_CUST_HSHLD_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND DEL_YN='N' AND  ROWNUM = 1) FAMLY_REL_CD                    /*가족관계코드        */
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU020' AND COMN_CD = A.CUST_STATUS_CD AND  COMN_CD_LVL_NO = 2) CUST_STATUS_CD_NM 
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU030' AND COMN_CD = A.CUST_TYPE_CD AND  COMN_CD_LVL_NO = 2) CUST_TYPE_CD_NM 
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU010' AND COMN_CD = A.CUST_DIV_CD AND  COMN_CD_LVL_NO = 2) CUST_DIV_CD_NM
                    , (SELECT STOR_NM FROM CRM_STOR_BAS WHERE STOR_NO = A.RCMD_STOR_NO AND ROWNUM = 1) RCMD_STOR_NO_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU040' AND COMN_CD = A.FAMLY_REL_CD AND  COMN_CD_LVL_NO = 2) FAMLY_REL_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU050' AND COMN_CD = A.DWEL_NFPY_CD AND  COMN_CD_LVL_NO = 2) DWEL_NFPY_CD_NM
<!--                     , (SELECT LISTAGG( CM.COMN_CD_NM,',') WITHIN GROUP(ORDER BY LVL) FROM  (SELECT REGEXP_SUBSTR(A.INTRST_FILD_CD, '[^,]+', 1, LEVEL) CD, LEVEL LVL  FROM DUAL CONNECT BY REGEXP_SUBSTR(A.INTRST_FILD_CD, '[^,]+', 1, LEVEL) IS NOT NULL) DL, CRM_COMN_CD_BAS CM WHERE CM.COMN_CD = DL.CD AND CM.COMN_CD_LVL_NO = 2 AND CM.TOP_COMN_CD = 'CU060'  ) INTRST_FILD_CD_NM -->
                    , (SELECT GODS_NM FROM CRM_GODS_BAS WHERE GODS_NO = A.REP_GODS_NO ) REP_GODS_NO_NM 
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU060' AND COMN_CD = A.REP_USE_CUST_DIV_CD AND  COMN_CD_LVL_NO = 2) REP_USE_CUST_DIV_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'S000' AND COMN_CD = A.SMS_RCV_AGREE_CHL_CD AND  COMN_CD_LVL_NO = 2) SMS_RCV_AGREE_CHL_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'S000' AND COMN_CD = A.EMAIL_RCV_AGREE_CHL_CD AND  COMN_CD_LVL_NO = 2) EMAIL_RCV_AGREE_CHL_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'S000' AND COMN_CD = A.ALRM_TK_RCV_AGREE_CHL_CD AND  COMN_CD_LVL_NO = 2) ALRM_TK_RCV_AGREE_CHL_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'S000' AND COMN_CD = A.PUSH_RCV_AGREE_CHL_CD AND  COMN_CD_LVL_NO = 2) PUSH_RCV_AGREE_CHL_CD_NM
                    , (SELECT STOR_NM FROM CRM_STOR_BAS WHERE STOR_NO = A.MSHIP_LAST_VISIT_STOR_NO AND ROWNUM = 1) MSHIP_LAST_VISIT_STOR_NO_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'MB010' AND COMN_CD = A.MSHIP_TYPE_CD AND  COMN_CD_LVL_NO = 2) MSHIP_TYPE_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'MB020' AND COMN_CD = A.MSHIP_GRADE_CD AND  COMN_CD_LVL_NO = 2) MSHIP_GRADE_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'S000' AND COMN_CD = A.MSHIP_CHL_CD AND  COMN_CD_LVL_NO = 2) MSHIP_CHL_CD_NM
                    , (SELECT STOR_NM FROM CRM_STOR_BAS WHERE STOR_NO = A.BLLK_REG_STOR_NO AND ROWNUM = 1)  BLLK_REG_STOR_NO_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'S000' AND COMN_CD = A.BLLK_REG_CHL_CD AND  COMN_CD_LVL_NO = 2) BLLK_REG_CHL_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'S000' AND COMN_CD = A.REG_CHL_CD AND  COMN_CD_LVL_NO = 2) REG_CHL_CD_NM
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = A.DISTRCT_CD AND  COMN_CD_LVL_NO = 2) DISTRCT_CD_NM
                    , (SELECT COUNT(1) FROM CRM_BLLK_CUST_HST WHERE ITG_CUST_NO = A.ITG_CUST_NO AND DEL_YN = 'N') BLACK_CNT
                    , (SELECT CARD_BAS_NO FROM  (SELECT CARD_BAS_NO, ROW_NUMBER() OVER (ORDER BY REG_DT DESC) RNUM FROM CRM_CARD_PBLS_HST WHERE ITG_CUST_NO = A.ITG_CUST_NO  ) WHERE RNUM =1 ) CARD_NO
                    , (SELECT COUNT(1) FROM CRM_COUPN_PBLS_HST WHERE ITG_CUST_NO = A.ITG_CUST_NO AND COUPN_BOOK_HST_SEQ IS NULL AND USE_DT IS NULL AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN NVL(FROM_USE_STD_DAY,'20000101') AND NVL(TO_USE_STD_DAY,'99991231')  ) COUPON_CNT
                    , (SELECT COUNT(1) FROM CRM_COUPN_BOOK_PBLS_HST BK WHERE BK.ITG_CUST_NO = A.ITG_CUST_NO AND BK.DEL_YN ='N' AND BK.COUPN_BOOK_HST_SEQ IN ( SELECT COUPN_BOOK_HST_SEQ FROM CRM_COUPN_PBLS_HST WHERE ITG_CUST_NO =  BK.ITG_CUST_NO AND USE_DT IS NULL AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN NVL(FROM_USE_STD_DAY,'20000101') AND NVL(TO_USE_STD_DAY,'99991231')   ) ) COUPON_BOOK_CNT
                    , A.EMAIL_ADDR EMAIL_ADDR                    /*이메일주소        */
                    , A.CORP_TEL_NO CORP_TEL_NO                    /*법인전화번호        */
                    , A.PIC_MPHON_NO  PIC_MPHON_NO                    /*담당자이동전화번호        */
                    , A.PIC_EMAIL_ADDR  PIC_EMAIL_ADDR                    /*담당자이메일주소        */
                    , A.ADDR_2_CTNTS ADDR_2_CTNTS                    /*주소2내용        */
                    , NVL((SELECT AGREE_YN INFO_AGREE_YN FROM (SELECT AGREE_YN,REG_DT,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '005' AND ITG_CUST_NO = A.ITG_CUST_NO) A WHERE RNUM = 1),'N')  INFO_AGREE_YN
                    , (SELECT TO_CHAR(REG_DT,'YYYYMMDDHH24MISS') INFO_AGREE_DT FROM (SELECT AGREE_YN,REG_DT,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '005' AND ITG_CUST_NO = A.ITG_CUST_NO) A WHERE RNUM = 1)  INFO_AGREE_DT
                    , (SELECT CHL_CD FROM (SELECT AGREE_YN,REG_DT,REG_CHL_CD CHL_CD,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '005' AND ITG_CUST_NO = A.ITG_CUST_NO) A WHERE RNUM = 1)  INFO_AGREE_CHL_CD
                    , (SELECT COMN_CD_NM FROM (SELECT AGREE_YN,REG_DT,REG_CHL_CD CHL_CD ,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '005' AND ITG_CUST_NO = A.ITG_CUST_NO) M,CRM_COMN_CD_BAS B WHERE RNUM = 1 AND B.TOP_COMN_CD = 'S000' AND B.COMN_CD = M.CHL_CD AND  B.COMN_CD_LVL_NO = 2 )  INFO_AGREE_CHL_CD_NM
                    , (SELECT CPRT_CMP_NO FROM (SELECT ITG_CUST_NO, CPRT_CMP_IDFY_NO,CPRT_CMP_NO ,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO ORDER BY REG_DT DESC) RNUM FROM CRM_CRPT_CMP_EXECVDEMP_BAS ) WHERE ITG_CUST_NO = A.ITG_CUST_NO AND RNUM =1) CPRT_CMP_NO
                    , (SELECT CMP.CPRT_CMP_NM FROM (SELECT ITG_CUST_NO, CPRT_CMP_IDFY_NO,CPRT_CMP_NO ,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO ORDER BY REG_DT DESC) RNUM FROM CRM_CRPT_CMP_EXECVDEMP_BAS ) EX, CRM_CRPT_CMP_BAS CMP WHERE EX.ITG_CUST_NO = A.ITG_CUST_NO AND EX.CPRT_CMP_NO= CMP.CPRT_CMP_NO AND EX.RNUM = 1) CPRT_CMP_NM   
                    , (SELECT AGREE_YN MARKETING_YN FROM (SELECT AGREE_YN,REG_DT,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '003' AND ITG_CUST_NO = A.ITG_CUST_NO) A WHERE RNUM = 1)  MARKETING_AGREE_YN
                    , (SELECT TO_CHAR(REG_DT,'YYYYMMDDHH24MISS') FROM (SELECT AGREE_YN,REG_DT,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '003' AND ITG_CUST_NO = A.ITG_CUST_NO) A WHERE RNUM = 1)  MARKETING_AGREE_DT
                    , (SELECT CHL_CD FROM (SELECT AGREE_YN,REG_DT,REG_CHL_CD CHL_CD,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '003' AND ITG_CUST_NO = A.ITG_CUST_NO) A WHERE RNUM = 1)  MARKETING_AGREE_CHL_CD
                    , (SELECT COMN_CD_NM FROM (SELECT AGREE_YN,REG_DT,REG_CHL_CD CHL_CD ,ROW_NUMBER() OVER (PARTITION BY ITG_CUST_NO,AGREE_TYPE_CD ORDER BY REG_DT DESC) RNUM FROM CRM_CUST_INFO_PTUSE_AGREE_HST WHERE  AGREE_TYPE_CD = '003' AND ITG_CUST_NO = A.ITG_CUST_NO) M,CRM_COMN_CD_BAS B WHERE RNUM = 1 AND B.TOP_COMN_CD = 'S000' AND B.COMN_CD = M.CHL_CD AND  B.COMN_CD_LVL_NO = 2 )  MARKETING_AGREE_CHL_CD_NM
        <choose>
            <when test="'Y'.toString().equals(decryptYn) "><include refid="sqlSelectDecCols"></include></when>
            <otherwise><include refid="sqlSelectEncCols"></include></otherwise>
        </choose>
    </sql>
    <sql id="sqlSelectCols">
        <include refid="sqlSelectBaseCols" /><include refid="sqlSelectExtCols" />
    </sql>
    
    <sql id="sqlContactInfo">
    	SELECT A.ITG_CUST_NO
             , MAX(DECODE(CNTPLC_TYPE_CD,'001',CNTPLC_TYPE_CD,NULL)) CNTPLC_TYPE_CD_001
             , MAX(DECODE(CNTPLC_TYPE_CD,'001',TEL_NO,NULL)) TEL_NO_001
             , MAX(DECODE(CNTPLC_TYPE_CD,'001',TEL_BK_DGT_NO,NULL)) TEL_BK_DGT_NO_001
             , MAX(DECODE(CNTPLC_TYPE_CD,'001',ZIP_CD,NULL)) ZIP_CD_001
             , MAX(DECODE(CNTPLC_TYPE_CD,'001',ADDR_1_CTNTS,NULL)) ADDR_1_CTNTS_001
             , MAX(DECODE(CNTPLC_TYPE_CD,'001',ADDR_2_CTNTS,NULL)) ADDR_2_CTNTS_001
             , MAX(DECODE(CNTPLC_TYPE_CD,'001',DISTRCT_CD,NULL)) DISTRCT_CD_001
             , MAX(DECODE(CNTPLC_TYPE_CD,'002',CNTPLC_TYPE_CD,NULL)) CNTPLC_TYPE_CD_002
             , MAX(DECODE(CNTPLC_TYPE_CD,'002',TEL_NO,NULL)) TEL_NO_002
             , MAX(DECODE(CNTPLC_TYPE_CD,'002',TEL_BK_DGT_NO,NULL)) TEL_BK_DGT_NO_002
             , MAX(DECODE(CNTPLC_TYPE_CD,'002',ZIP_CD,NULL)) ZIP_CD_002
             , MAX(DECODE(CNTPLC_TYPE_CD,'002',ADDR_1_CTNTS,NULL)) ADDR_1_CTNTS_002
             , MAX(DECODE(CNTPLC_TYPE_CD,'002',ADDR_2_CTNTS,NULL)) ADDR_2_CTNTS_002
             , MAX(DECODE(CNTPLC_TYPE_CD,'002',DISTRCT_CD,NULL)) DISTRCT_CD_002
             , MAX(DECODE(CNTPLC_TYPE_CD,'003',CNTPLC_TYPE_CD,NULL)) CNTPLC_TYPE_CD_003
             , MAX(DECODE(CNTPLC_TYPE_CD,'003',TEL_NO,NULL)) TEL_NO_003
             , MAX(DECODE(CNTPLC_TYPE_CD,'003',TEL_BK_DGT_NO,NULL)) TEL_BK_DGT_NO_003
             , MAX(DECODE(CNTPLC_TYPE_CD,'003',ZIP_CD,NULL)) ZIP_CD_003
             , MAX(DECODE(CNTPLC_TYPE_CD,'003',ADDR_1_CTNTS,NULL)) ADDR_1_CTNTS_003
             , MAX(DECODE(CNTPLC_TYPE_CD,'003',ADDR_2_CTNTS,NULL)) ADDR_2_CTNTS_003
             , MAX(DECODE(CNTPLC_TYPE_CD,'003',DISTRCT_CD,NULL)) DISTRCT_CD_003
             , MAX(DECODE(CNTPLC_TYPE_CD,'004',CNTPLC_TYPE_CD,NULL)) CNTPLC_TYPE_CD_004
             , MAX(DECODE(CNTPLC_TYPE_CD,'004',TEL_NO,NULL)) TEL_NO_004
             , MAX(DECODE(CNTPLC_TYPE_CD,'004',TEL_BK_DGT_NO,NULL)) TEL_BK_DGT_NO_004
             , MAX(DECODE(CNTPLC_TYPE_CD,'004',ZIP_CD,NULL)) ZIP_CD_004
             , MAX(DECODE(CNTPLC_TYPE_CD,'004',ADDR_1_CTNTS,NULL)) ADDR_1_CTNTS_004
             , MAX(DECODE(CNTPLC_TYPE_CD,'004',ADDR_2_CTNTS,NULL)) ADDR_2_CTNTS_004
             , MAX(DECODE(CNTPLC_TYPE_CD,'004',DISTRCT_CD,NULL)) DISTRCT_CD_004
          FROM (
            SELECT ITG_CUST_NO
                 , CNTPLC_TYPE_CD
                 , TEL_NO
                 , TEL_BK_DGT_NO
                 , ZIP_CD
                 , DISTRCT_CD
                 , ADDR_1_CTNTS
                 , ADDR_2_CTNTS
                 , EMAIL_ADDR
                 , ROW_NUMBER() OVER(PARTITION BY ITG_CUST_NO,CNTPLC_TYPE_CD ORDER BY AMD_DT DESC, REG_DT DESC ) RNUM  
              FROM CRM_CUST_CNTPLC_BAS
             ) A
         WHERE RNUM = 1
         GROUP BY A.ITG_CUST_NO
    </sql>    
    <sql id="sqlConditions">
        <where>
        <if test="itgCustNo != null and itgCustNo != ''">
                  AND A.ITG_CUST_NO     =       #{itgCustNo}
        </if>
        <if test="itgCustNoArray != null ">
                  AND A.ITG_CUST_NO     IN 
          <foreach item="item" index="index" collection="itgCustNoArray" open="(" separator="," close=")">
                TRIM(#{item})
            </foreach>
        </if>
        
        <if test="corpDivYn != null and corpDivYn != ''">
                  AND A.CORP_DIV_YN     =       #{corpDivYn}
        </if>
        <if test="custNm != null and custNm != ''">
                  AND A.CUST_NM         =       #{custNm}
        </if>
        <if test="custNmLike != null and custNmLike != ''">
                  AND A.CUST_NM         LIKE    '%' ||  #{custNmLike} || '%'
        </if>
        
        <if test="gndrCd != null and gndrCd != ''">
            <choose>
                <when test="gndrCd instanceof String">
                    AND A.GNDR_CD         =       #{gndrCd}
                </when>
                <otherwise>
                    AND A.GNDR_CD         IN
                    <foreach item="item" index="index" collection="gndrCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="birthYmd != null and birthYmd != ''">
                  AND A.BIRTHDAY        =       #{birthYmd}
        </if>
        
        <if test="fromBirthYmd != null and fromBirthYmd != ''">
                  AND A.BIRTHDAY        >=       #{fromBirthYmd}
        </if>
        <if test="toBirthYmd != null and toBirthYmd != ''">
                  AND #{toBirthYmd}     >=       A.BIRTHDAY
        </if>
        
        <if test="birthday != null and birthday != ''">
                  AND A.BIRTHDAY        LIKE   '%' ||  #{birthday}
        </if>
        <if test="fromBirthday != null and fromBirthday != ''">
                  AND SUBSTR(A.BIRTHDAY,5)        >=       #{fromBirthday}
        </if>
        <if test="toBirthday != null and toBirthday != ''">
                  AND #{toBirthday}     >=       SUBSTR(A.BIRTHDAY,5)
        </if>
        
        <if test="bizNo != null and bizNo != ''">
                  AND A.BIZ_NO          =       #{bizNo}
        </if>
        <if test="corpRegNo != null and corpRegNo != ''">
                  AND A.CORP_REG_NO     =       #{corpRegNo}
        </if>
        <if test="corpTelNo != null and corpTelNo != ''">
                  AND A.CORP_TEL_NO     =       #{corpTelNo}
        </if>
        <if test="fornYn != null and fornYn != ''">
                  AND A.FORN_YN         =       #{fornYn}
        </if>
        <if test="repNm != null and repNm != ''">
                  AND A.REP_NM          =       #{repNm}
        </if>
        <if test="mphonNo != null and mphonNo != ''">
                  AND A.MPHON_NO        =       #{mphonNo}
        </if>
        <if test="mphonBkDgtNo != null and mphonBkDgtNo != ''">
                  AND A.MPHON_BK_DGT_NO =       #{mphonBkDgtNo}
        </if>
        <if test="emailAddr != null and emailAddr != ''">
                  AND A.EMAIL_ADDR      =       #{emailAddr}
        </if>
        <if test="picNm != null and picNm != ''">
                  AND A.PIC_NM          =       #{picNm}
        </if>
        <if test="picMphonNo != null and picMphonNo != ''">
                  AND A.PIC_MPHON_NO    =       #{picMphonNo}
        </if>
        <if test="picMphonBkDgtNo != null and picMphonBkDgtNo != ''">
                  AND A.PIC_MPHON_BK_DGT_NO=       #{picMphonBkDgtNo}
        </if>
        <if test="picEmailAddr != null and picEmailAddr != ''">
                  AND A.PIC_EMAIL_ADDR  =       #{picEmailAddr}
        </if>
        <if test="indiInfoValidPerdStaDt != null and indiInfoValidPerdStaDt != ''">
                  AND A.INDI_INFO_VALID_PERD_STA_DT=       TO_DATE(#{indiInfoValidPerdStaDt},'YYYYMMDDHH24MISS')
        </if>
        <if test="indiInfoValidPerdEndDt != null and indiInfoValidPerdEndDt != ''">
                  AND A.INDI_INFO_VALID_PERD_END_DT=       TO_DATE(#{indiInfoValidPerdEndDt},'YYYYMMDDHH24MISS')
        </if>
        <if test="custStatusCd != null and custStatusCd != ''">
            <choose>
                <when test="custStatusCd instanceof String">
                    AND A.CUST_STATUS_CD  =       #{custStatusCd}
                </when>
                <otherwise>
                    AND A.CUST_STATUS_CD  IN
                    <foreach item="item" index="index" collection="custStatusCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="custStatusCdNot != null and custStatusCdNot != ''">
            <choose>
                <when test="custStatusCdNot instanceof String">
                    AND A.CUST_STATUS_CD  !=       #{custStatusCdNot}
                </when>
                <otherwise>
                    AND A.CUST_STATUS_CD NOT  IN
                    <foreach item="item" index="index" collection="custStatusCdNot" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="custStatusCds != null and custStatusCds != ''">
            		AND A.CUST_STATUS_CD  IN
                    <foreach item="item" index="index" collection="custStatusCds" open="(" separator="," close=")">
                        #{item}
                    </foreach>
        </if>
        <if test="custStatusChngDt != null and custStatusChngDt != ''">
                  AND A.CUST_STATUS_CHNG_DT=       TO_DATE(#{custStatusChngDt},'YYYYMMDDHH24MISS')
        </if>
        <if test="custInfoChngDt != null and custInfoChngDt != ''">
                  AND A.CUST_INFO_CHNG_DT=       TO_DATE(#{custInfoChngDt},'YYYYMMDDHH24MISS')
        </if>
        <if test="custTypeCd != null and custTypeCd != ''">
            <choose>
                <when test="custTypeCd instanceof String">
                    AND A.CUST_TYPE_CD    =       #{custTypeCd}
                </when>
                <otherwise>
                    AND A.CUST_TYPE_CD    IN
                    <foreach item="item" index="index" collection="custTypeCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="custDivCd != null and custDivCd != ''">
            <choose>
                <when test="custDivCd instanceof String">
                    AND A.CUST_DIV_CD     =       #{custDivCd}
                </when>
                <otherwise>
                    AND A.CUST_DIV_CD     IN
                    <foreach item="item" index="index" collection="custDivCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        
        <if test="distrctCd != null and distrctCd != ''">
            <choose>
                <when test="distrctCd instanceof String">
                    AND A.DISTRCT_CD          =       #{distrctCd}
                </when>
                <otherwise>
                    AND A.DISTRCT_CD          IN
                    <foreach item="item" index="index" collection="distrctCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="zipCd != null and zipCd != ''">
            <choose>
                <when test="zipCd instanceof String">
                    AND A.ZIP_CD          =       #{zipCd}
                </when>
                <otherwise>
                    AND A.ZIP_CD          IN
                    <foreach item="item" index="index" collection="zipCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="addr1Ctnts != null and addr1Ctnts != ''">
<!--                   AND A.ADDR_1_CTNTS    =       #{addr1Ctnts} -->
				AND A.ADDR_1_CTNTS    LIKE  '%' ||    #{addr1Ctnts} || '%'
        </if>
        <if test="addr2Ctnts != null and addr2Ctnts != ''">
                  AND A.ADDR_2_CTNTS    =       #{addr2Ctnts}
        </if>
<!--         <if test="rcmdStorNo != null and rcmdStorNo != ''"> -->
<!--                   AND A.RCMD_STOR_NO    =       #{rcmdStorNo} -->
<!--         </if> -->
        
        <if test="rcmdStorNos != null and rcmdStorNos != ''">
                  AND A.RCMD_STOR_NO    IN <foreach item="item" index="index" collection="rcmdStorNos" open="(" separator="," close=")">TRIM(#{item})</foreach>
        </if>
        
        <if test="rcmdrCustNo != null and rcmdrCustNo != ''">
                  AND A.RCMDR_CUST_NO   =       #{rcmdrCustNo}
        </if>
        <if test="rcmdExecvdempNo != null and rcmdExecvdempNo != ''">
                  AND A.RCMD_EXECVDEMP_NO=       #{rcmdExecvdempNo}
        </if>
        <if test="marryYn != null and marryYn != ''">
                  AND A.MARRY_YN        =       #{marryYn}
        </if>
        <if test="repHshldNo != null and repHshldNo != ''">
                  AND A.REP_HSHLD_NO    =       #{repHshldNo}
        </if>
        <if test="famlyRelCd != null and famlyRelCd != ''">
            <choose>
                <when test="famlyRelCd instanceof String">
                    AND A.FAMLY_REL_CD    =       #{famlyRelCd}
                </when>
                <otherwise>
                    AND A.FAMLY_REL_CD    IN
                    <foreach item="item" index="index" collection="famlyRelCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="dwelNfpyCd != null and dwelNfpyCd != ''">
            <choose>
                <when test="dwelNfpyCd instanceof String">
                    AND A.DWEL_NFPY_CD    =       #{dwelNfpyCd}
                </when>
                <otherwise>
                    AND A.DWEL_NFPY_CD    IN
                    <foreach item="item" index="index" collection="dwelNfpyCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="intrstFildCd != null and intrstFildCd != ''">
            <choose>
                <when test="intrstFildCd instanceof String">
                    AND A.INTRST_FILD_CD  =       #{intrstFildCd}
                </when>
                <otherwise>
                    AND A.INTRST_FILD_CD  IN
                    <foreach item="item" index="index" collection="intrstFildCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="repGodsNo != null and repGodsNo != ''">
                  AND A.REP_GODS_NO     =       #{repGodsNo}
        </if>
        <if test="repUseCustDivCd != null and repUseCustDivCd != ''">
            <choose>
                <when test="repUseCustDivCd instanceof String">
                    AND A.REP_USE_CUST_DIV_CD=       #{repUseCustDivCd}
                </when>
                <otherwise>
                    AND A.REP_USE_CUST_DIV_CDIN
                    <foreach item="item" index="index" collection="repUseCustDivCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="smsRcvAgreeYn != null and smsRcvAgreeYn != ''">
                  AND A.SMS_RCV_AGREE_YN=       #{smsRcvAgreeYn}
        </if>
        <if test="smsRcvAgreeDt != null and smsRcvAgreeDt != ''">
                  AND A.SMS_RCV_AGREE_DT=       TO_DATE(#{smsRcvAgreeDt},'YYYYMMDDHH24MISS')
        </if>
        <if test="smsRcvAgreeChlCd != null and smsRcvAgreeChlCd != ''">
            <choose>
                <when test="smsRcvAgreeChlCd instanceof String">
                    AND A.SMS_RCV_AGREE_CHL_CD=       #{smsRcvAgreeChlCd}
                </when>
                <otherwise>
                    AND A.SMS_RCV_AGREE_CHL_CDIN
                    <foreach item="item" index="index" collection="smsRcvAgreeChlCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="emailRcvAgreeYn != null and emailRcvAgreeYn != ''">
                  AND A.EMAIL_RCV_AGREE_YN=       #{emailRcvAgreeYn}
        </if>
        <if test="emailRcvAgreeDt != null and emailRcvAgreeDt != ''">
                  AND A.EMAIL_RCV_AGREE_DT=       TO_DATE(#{emailRcvAgreeDt},'YYYYMMDDHH24MISS')
        </if>
        <if test="emailRcvAgreeChlCd != null and emailRcvAgreeChlCd != ''">
            <choose>
                <when test="emailRcvAgreeChlCd instanceof String">
                    AND A.EMAIL_RCV_AGREE_CHL_CD=       #{emailRcvAgreeChlCd}
                </when>
                <otherwise>
                    AND A.EMAIL_RCV_AGREE_CHL_CDIN
                    <foreach item="item" index="index" collection="emailRcvAgreeChlCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="alrmTkRcvAgreeYn != null and alrmTkRcvAgreeYn != ''">
                  AND A.ALRM_TK_RCV_AGREE_YN=       #{alrmTkRcvAgreeYn}
        </if>
        <if test="alrmTkRcvAgreeDt != null and alrmTkRcvAgreeDt != ''">
                  AND A.ALRM_TK_RCV_AGREE_DT=       TO_DATE(#{alrmTkRcvAgreeDt},'YYYYMMDDHH24MISS')
        </if>
        <if test="alrmTkRcvAgreeChlCd != null and alrmTkRcvAgreeChlCd != ''">
            <choose>
                <when test="alrmTkRcvAgreeChlCd instanceof String">
                    AND A.ALRM_TK_RCV_AGREE_CHL_CD=       #{alrmTkRcvAgreeChlCd}
                </when>
                <otherwise>
                    AND A.ALRM_TK_RCV_AGREE_CHL_CDIN
                    <foreach item="item" index="index" collection="alrmTkRcvAgreeChlCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="pushRcvAgreeYn != null and pushRcvAgreeYn != ''">
                  AND A.PUSH_RCV_AGREE_YN=       #{pushRcvAgreeYn}
        </if>
        <if test="pushRcvAgreeDt != null and pushRcvAgreeDt != ''">
                  AND A.PUSH_RCV_AGREE_DT=       TO_DATE(#{pushRcvAgreeDt},'YYYYMMDDHH24MISS')
        </if>
        <if test="pushRcvAgreeChlCd != null and pushRcvAgreeChlCd != ''">
            <choose>
                <when test="pushRcvAgreeChlCd instanceof String">
                    AND A.PUSH_RCV_AGREE_CHL_CD=       #{pushRcvAgreeChlCd}
                </when>
                <otherwise>
                    AND A.PUSH_RCV_AGREE_CHL_CDIN
                    <foreach item="item" index="index" collection="pushRcvAgreeChlCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="ciCertfYn != null and ciCertfYn != ''">
                  AND A.CI_CERTF_YN     =       #{ciCertfYn}
        </if>
        <if test="ci != null and ci != ''">
                  AND A.CI              =       #{ci}
        </if>
        <if test="diCertfYn != null and diCertfYn != ''">
                  AND A.DI_CERTF_YN     =       #{diCertfYn}
        </if>
        <if test="di != null and di != ''">
                  AND A.DI              =       #{di}
        </if>
        <if test="rcvRfslYn != null and rcvRfslYn != ''">
                  AND A.RCV_RFSL_YN     =       #{rcvRfslYn}
        </if>
        <if test="mshipSbscYn != null and mshipSbscYn != ''">
                  AND A.MSHIP_SBSC_YN   =       #{mshipSbscYn}
        </if>
        <if test="mshipLoginId != null and mshipLoginId != ''">
                  AND A.MSHIP_LOGIN_ID  =       #{mshipLoginId}
        </if>
        <if test="mshipSbtNo != null and mshipSbtNo != ''">
                  AND A.MSHIP_SBT_NO    =       #{mshipSbtNo}
        </if>
        <if test="mshipLoginPwd != null and mshipLoginPwd != ''">
                  AND A.MSHIP_LOGIN_PWD =       #{mshipLoginPwd}
        </if>
        <if test="mshipLastLoginDt != null and mshipLastLoginDt != ''">
                  AND A.MSHIP_LAST_LOGIN_DT=       TO_DATE(#{mshipLastLoginDt},'YYYYMMDDHH24MISS')
        </if>
        <if test="mshipLastLoginIpAddr != null and mshipLastLoginIpAddr != ''">
                  AND A.MSHIP_LAST_LOGIN_IP_ADDR=       #{mshipLastLoginIpAddr}
        </if>
        <if test="mshipLastStorVisitDt != null and mshipLastStorVisitDt != ''">
                  AND A.MSHIP_LAST_STOR_VISIT_DT=       TO_DATE(#{mshipLastStorVisitDt},'YYYYMMDDHH24MISS')
        </if>
        <if test="mshipLastVisitStorNo != null and mshipLastVisitStorNo != ''">
                  AND A.MSHIP_LAST_VISIT_STOR_NO=       #{mshipLastVisitStorNo}
        </if>
        <if test="mshipTypeCd != null and mshipTypeCd != ''">
            <choose>
                <when test="mshipTypeCd instanceof String">
                    AND A.MSHIP_TYPE_CD   =       #{mshipTypeCd}
                </when>
                <otherwise>
                    AND A.MSHIP_TYPE_CD   IN
                    <foreach item="item" index="index" collection="mshipTypeCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="mshipSbscDt != null and mshipSbscDt != ''">
                  AND A.MSHIP_SBSC_DT   =       TO_DATE(#{mshipSbscDt},'YYYYMMDDHH24MISS')
        </if>
        <if test="mshipGradeCd != null and mshipGradeCd != ''">
            <choose>
                <when test="mshipGradeCd instanceof String">
                    AND A.MSHIP_GRADE_CD  =       #{mshipGradeCd}
                </when>
                <otherwise>
                    AND A.MSHIP_GRADE_CD  IN
                    <foreach item="item" index="index" collection="mshipGradeCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="mshipGradeChngDt != null and mshipGradeChngDt != ''">
                  AND A.MSHIP_GRADE_CHNG_DT=       TO_DATE(#{mshipGradeChngDt},'YYYYMMDDHH24MISS')
        </if>
        <if test="mshipInfoChngDt != null and mshipInfoChngDt != ''">
                  AND A.MSHIP_INFO_CHNG_DT=       TO_DATE(#{mshipInfoChngDt},'YYYYMMDDHH24MISS')
        </if>
        <if test="mshipInfoConfrExecvdempNo != null and mshipInfoConfrExecvdempNo != ''">
                  AND A.MSHIP_INFO_CONFR_EXECVDEMP_NO=       #{mshipInfoConfrExecvdempNo}
        </if>
        <if test="cprtExecvdempNo != null and cprtExecvdempNo != ''">
                  AND A.CPRT_EXECVDEMP_NO=       #{cprtExecvdempNo}
        </if>
        <if test="mshipLeaveDt != null and mshipLeaveDt != ''">
                  AND A.MSHIP_LEAVE_DT  =       TO_DATE(#{mshipLeaveDt},'YYYYMMDDHH24MISS')
        </if>
        <if test="extncPointLmtScore != null and extncPointLmtScore != ''">
                  AND A.EXTNC_POINT_LMT_SCORE=       #{extncPointLmtScore}
        </if>
        <if test="accumPointLmtScore != null and accumPointLmtScore != ''">
                  AND A.ACCUM_POINT_LMT_SCORE=       #{accumPointLmtScore}
        </if>
        <if test="mshipChlCd != null and mshipChlCd != ''">
            <choose>
                <when test="mshipChlCd instanceof String">
                    AND A.MSHIP_CHL_CD    =       #{mshipChlCd}
                </when>
                <otherwise>
                    AND A.MSHIP_CHL_CD    IN
                    <foreach item="item" index="index" collection="mshipChlCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="bllkRegStorNo != null and bllkRegStorNo != ''">
                  AND A.BLLK_REG_STOR_NO=       #{bllkRegStorNo}
        </if>
        <if test="bllkmshpYn != null and bllkmshpYn != ''">
                  AND A.BLLKMSHP_YN     =       #{bllkmshpYn}
        </if>
        <if test="bllkRegChlCd != null and bllkRegChlCd != ''">
            <choose>
                <when test="bllkRegChlCd instanceof String">
                    AND A.BLLK_REG_CHL_CD =       #{bllkRegChlCd}
                </when>
                <otherwise>
                    AND A.BLLK_REG_CHL_CD IN
                    <foreach item="item" index="index" collection="bllkRegChlCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="bllkRegWhyCtnts != null and bllkRegWhyCtnts != ''">
                  AND A.BLLK_REG_WHY_CTNTS=       #{bllkRegWhyCtnts}
        </if>
        <if test="bllkRegDt != null and bllkRegDt != ''">
                  AND A.BLLK_REG_DT     =       TO_DATE(#{bllkRegDt},'YYYYMMDDHH24MISS')
        </if>
        <if test="regChlCd != null and regChlCd != ''">
            <choose>
                <when test="regChlCd instanceof String">
                    AND A.REG_CHL_CD      =       #{regChlCd}
                </when>
                <otherwise>
                    AND A.REG_CHL_CD      IN
                    <foreach item="item" index="index" collection="regChlCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="exceptItgCustNo != null and exceptItgCustNo != ''">
                  AND A.ITG_CUST_NO     !=      #{exceptItgCustNo}
        </if>
        <if test="patronStorNo != null and patronStorNo != ''">
                  AND A.ITG_CUST_NO     IN (
                  	SELECT ITG_CUST_NO 
                  	  FROM CRM_CUST_PATRON_STOR_BAS
                  	 WHERE STOR_NO     = #{patronStorNo}
                  )
        </if>
<!--         <if test="cardNo !=null and cardNo !=''"> -->
<!--         		  AND A.ITG_CUST_NO IN ( -->
<!--         		  	SELECT ITG_CUST_NO  -->
<!--         		  	  FROM CRM_CARD_PBLS_HST -->
<!--         		  	 WHERE CARD_PBLS_HST_SEQ = #{cardNo} -->
<!--         		  ) -->
<!--         </if> -->
        <if test="cardNo !=null and cardNo !=''">
        		  AND A.ITG_CUST_NO IN (
        		  	SELECT ITG_CUST_NO 
        		  	  FROM CRM_CARD_PBLS_HST
        		  	 WHERE CARD_BAS_NO = #{cardNo}
        		  )
        </if>
        <if test="phoneNo !=null and phoneNo !=''">
        		  AND (A.ITG_CUST_NO IN (
        		  	SELECT ITG_CUST_NO 
        		  	  FROM CRM_CUST_CNTPLC_BAS
        		  	 WHERE TEL_NO = #{phoneEncNo}
        		  	   AND DEL_YN = 'N'
        		      ) 
                     OR
                     A.MPHON_NO =  #{phoneEncNo}
                  )
        </if>
        <if test="phoneBackNo !=null and phoneBackNo !=''">
                  AND (A.ITG_CUST_NO IN (
                    SELECT ITG_CUST_NO 
                      FROM CRM_CUST_CNTPLC_BAS
                     WHERE TEL_BK_DGT_NO = #{phoneBackNo}
                       AND DEL_YN = 'N'
                      ) 
                     OR
                     A.MPHON_BK_DGT_NO =  #{phoneBackNo}
                  )
        </if>
        <if test="'Y'.toString().equals(membershipOnly) ">
                AND A.MSHIP_SBSC_YN = 'Y'
        </if>

        <if test="noVisitDays !=null and noVisitDays !=''">
                AND TRUNC(SYSDATE) - #{noVisitDays}  >=  A.MSHIP_LAST_STOR_VISIT_DT 
        </if>
         <if test="visitStartYmd !=null and visitStartYmd !=''">
                AND A.MSHIP_LAST_STOR_VISIT_DT >= TO_DATE(#{visitStartYmd},'YYYYMMDD') 
        </if>
        <if test="visitEndYmd !=null and visitEndYmd !=''">
                AND TO_DATE(#{visitEndYmd},'YYYYMMDD') +1 >=  A.MSHIP_LAST_STOR_VISIT_DT 
        </if>
<!--         <choose> -->
<!--             <when test="visitStartYmd !=null and visitStartYmd !='' and visitEndYmd !=null and visitEndYmd !=''">  -->
<!--                 AND ( A.ITG_CUST_NO IN (SELECT SUM(ITG_CUST_NO) -->
<!--                                            FROM PIFOWN.IFS_ITG_CUST_STOR_SALE -->
<!--                                           WHERE STOR_CD = DECODE(#{storNo},NULL,STOR_CD,#{storNo}) -->
<!--                                             AND SALE_DATE BETWEEN #{visitStartYmd} AND #{visitEndYmd} -->
<!--                                            ) -->
<!--                    OR A.ITG_CUST_NO IN ( SELECT DISTINCT(ITG_CUST_NO)  -->
<!--                                            FROM PIFOWN.IFS_ITG_STOR_EXPRN -->
<!--                                           WHERE STOR_CD = DECODE(#{storNo},NULL,STOR_CD,#{storNo}) -->
<!--                                             AND EXPRN_DATE BETWEEN #{visitStartYmd} AND #{visitEndYmd} -->
<!--                                             AND EXPRN_CNT > 0 -->
<!--                   )) -->
<!--             </when> -->
<!--         </choose> -->
        <if test="mshipExptGradeCd != null and mshipExptGradeCd != ''">
            <choose>
                <when test="mshipExptGradeCd instanceof String">
                    AND A.MSHIP_EXPT_GRADE_CD=       #{mshipExptGradeCd}
                </when>
                <otherwise>
                    AND A.MSHIP_EXPT_GRADE_CDIN
                    <foreach item="item" index="index" collection="mshipExptGradeCd" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="mshipAdvncmtScore != null and mshipAdvncmtScore != ''">
                  AND A.MSHIP_ADVNCMT_SCORE=       #{mshipAdvncmtScore}
        </if>
        <if test="fromMshipAdvncmtScore != null and fromMshipAdvncmtScore != ''">
                  AND A.MSHIP_ADVNCMT_SCORE >=       #{fromMshipAdvncmtScore}
        </if>
        <if test="toMshipAdvncmtScore != null and toMshipAdvncmtScore != ''">
                  AND #{toMshipAdvncmtScore} >=       A.MSHIP_ADVNCMT_SCORE
        </if>
        
        <if test="fromSaleAggrAmt != null and fromSaleAggrAmt != ''">
                  AND A.SALE_AGGR_AMT >=       #{fromSaleAggrAmt}
        </if>
        <if test="toSaleAggrAmt != null and toSaleAggrAmt != ''">
                  AND #{toSaleAggrAmt} >=       A.SALE_AGGR_AMT
        </if>
        
        <if test="prtctFamlyYn != null and prtctFamlyYn != ''">
                  AND A.PRTCT_FAMLY_YN=       #{prtctFamlyYn}
        </if>
        <if test="exprnYn != null and exprnYn != ''">
                  AND A.EXPRN_YN=       #{exprnYn}
        </if>
        <if test="appPushTokn != null and appPushTokn != ''">
                  AND A.APP_PUSH_TOKN=       #{appPushTokn}
        </if>
       
<!--         <if test="purchaseStartYmd != null and purchaseStartYmd != '' and purchaseEndYmd !=null and purchaseEndYmd !=''"> -->
<!--                   AND A.ITG_CUST_NO IN ( -->
<!--                      SELECT SUM(ITG_CUST_NO) -->
<!--                       FROM PIFOWN.IFS_ITG_CUST_STOR_SALE -->
<!--                      WHERE STOR_CD = DECODE(#{storNo},NULL,STOR_CD,#{storNo}) -->
<!--                        AND SALE_DATE BETWEEN #{purchaseStartYmd} AND #{purchaseEndYmd} -->
<!--                   ) -->
<!--         </if> -->
<!--         <if test="exprnStartYmd != null and exprnStartYmd != '' and exprnEndYmd !=null and exprnEndYmd !=''"> -->
<!--                   AND A.ITG_CUST_NO IN ( SELECT DISTINCT(ITG_CUST_NO)  -->
<!--                                            FROM PIFOWN.IFS_ITG_STOR_EXPRN -->
<!--                                           WHERE STOR_CD = DECODE(#{storNo},NULL,STOR_CD,#{storNo}) -->
<!--                                             AND EXPRN_DATE BETWEEN #{exprnStartYmd} AND #{exprnEndYmd} -->
<!--                                             AND EXPRN_CNT > 0 -->
<!--                   ) -->
<!--         </if> -->
        </where>
    </sql>
    <select id="selectExitUser" resultType="com.ceragem.api.crm.model.CrmCustVo">
            SELECT A.*
              FROM (
               SELECT /* com.ceragem.api.crm.dao.CrmCustBasDao.selectExitUser */<include refid="sqlSelectCols"/>
                    , ROW_NUMBER() OVER (ORDER BY MSHIP_LEAVE_DT DESC) RNUM
                 FROM CRM_DORM_CUST_BAS A
                WHERE A.CUST_NM = #{custNm}
                  AND A.MPHON_NO = #{mphonNo}
                  AND ADD_MONTHS(TRUNC(SYSDATE),+1) > A.MSHIP_LEAVE_DT   
                  AND A.CUST_STATUS_CD = '003' ) A
              WHERE RNUM = 1
    </select>
    <select id="selectListCount" resultType="int">
                SELECT /* com.ceragem.api.crm.dao.CrmCustBasDao.selectListCount */ COUNT(1)
                 FROM CRM_CUST_BAS A
        <include refid="sqlConditions"/>
    </select>
    <select id="selectList" resultType="com.ceragem.api.crm.model.CrmCustVo">
     SELECT /*+ LEADING(A) USE_NL(A B) */ /* com.ceragem.api.crm.dao.CrmCustBasDao.selectList */ <include refid="sqlSelectBaseCols"/><include refid="sqlSelectExtCols"/>
          , B.TEL_NO_001  INST_TEL_NO
          , B.DISTRCT_CD_001 INST_DISTRCT_CD
          , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = B.DISTRCT_CD_001 AND  COMN_CD_LVL_NO = 2) INST_DISTRCT_CD_NM
          , B.ZIP_CD_001 INST_ZIP_CD
          , B.ADDR_1_CTNTS_001 INST_ADDR1
          , B.ADDR_2_CTNTS_001 INST_ADDR2
          , B.TEL_NO_002 JOB_TEL_NO
          , B.DISTRCT_CD_002 JOB_DISTRCT_CD
          , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = B.DISTRCT_CD_002 AND  COMN_CD_LVL_NO = 2) JOB_DISTRCT_CD_NM
          , B.ZIP_CD_002 JOB_ZIP_CD
          , B.ADDR_1_CTNTS_002 JOB_ADDR1
          , B.ADDR_2_CTNTS_002 JOB_ADDR2
          , B.TEL_NO_003 HOME_TEL_NO
          , B.DISTRCT_CD_003 HOME_DISTRCT_CD
          , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = B.DISTRCT_CD_003 AND  COMN_CD_LVL_NO = 2) HOME_DISTRCT_CD_NM
          , B.ZIP_CD_003 HOME_ZIP_CD
          , B.ADDR_1_CTNTS_003 HOME_ADDR1
          , B.ADDR_2_CTNTS_003 HOME_ADDR2
<!--             , (SELECT TEL_NO FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '001' AND ROWNUM = 1)  INST_TEL_NO -->
<!--             , (SELECT DISTRCT_CD FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '001' AND ROWNUM = 1)  INST_DISTRCT_CD -->
<!--             , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = (SELECT DISTRCT_CD FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '001' AND ROWNUM = 1) AND  COMN_CD_LVL_NO = 2) INST_DISTRCT_CD_NM -->
<!--             , (SELECT ZIP_CD FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '001' AND ROWNUM = 1)  INST_ZIP_CD -->
<!--             , (SELECT ADDR_1_CTNTS FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '001' AND ROWNUM = 1)  INST_ADDR1 -->
<!--             , (SELECT ADDR_2_CTNTS FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '001' AND ROWNUM = 1)  INST_ADDR2 -->
<!--             , (SELECT TEL_NO FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '002' AND ROWNUM = 1)  JOB_TEL_NO -->
<!--             , (SELECT DISTRCT_CD FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '002' AND ROWNUM = 1)  JOB_DISTRCT_CD -->
<!--             , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = (SELECT DISTRCT_CD FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '002' AND ROWNUM = 1) AND  COMN_CD_LVL_NO = 2) JOB_DISTRCT_CD_NM -->
<!--             , (SELECT ZIP_CD FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '002' AND ROWNUM = 1)  JOB_ZIP_CD -->
<!--             , (SELECT ADDR_1_CTNTS FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '002' AND ROWNUM = 1)  JOB_ADDR1 -->
<!--             , (SELECT ADDR_2_CTNTS FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '002' AND ROWNUM = 1)  JOB_ADDR2 -->
<!--             , (SELECT TEL_NO FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '003' AND ROWNUM = 1)  HOME_TEL_NO -->
<!--             , (SELECT DISTRCT_CD FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '003' AND ROWNUM = 1)  HOME_DISTRCT_CD -->
<!--             , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = (SELECT DISTRCT_CD FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '003' AND ROWNUM = 1) AND  COMN_CD_LVL_NO = 2) HOME_DISTRCT_CD_NM -->
<!--             , (SELECT ZIP_CD FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '003' AND ROWNUM = 1)  HOME_ZIP_CD -->
<!--             , (SELECT ADDR_1_CTNTS FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '003' AND ROWNUM = 1)  HOME_ADDR1 -->
<!--             , (SELECT ADDR_2_CTNTS FROM CRM_CUST_CNTPLC_BAS WHERE ITG_CUST_NO = A.ITG_CUST_NO AND CNTPLC_TYPE_CD = '003' AND ROWNUM = 1)  HOME_ADDR2 -->
          
       FROM (
        <include refid="com.ceragem.api.crm.dao.CrmCommonDao.pagingHeader"/>
               SELECT <include refid="sqlSelectBaseCols"/>
                    , A.EMAIL_ADDR                    /*이메일주소        */
                    , A.CORP_TEL_NO                    /*법인전화번호        */
                    , A.PIC_MPHON_NO                    /*담당자이동전화번호        */
                    , A.PIC_EMAIL_ADDR                    /*담당자이메일주소        */
                    , A.ADDR_2_CTNTS                    /*주소2내용        */
                    , A.MPHON_BK_DGT_NO
                    , A.MPHON_NO
                    , A.INDI_INFO_VALID_PERD_STA_DT                    /*개인정보유효기간시작일시        */
                    , A.INDI_INFO_VALID_PERD_END_DT                    /*개인정보유효기간종료일시        */
                    , A.CUST_STATUS_CHNG_DT                    /*고객상태변경일시        */
                    , A.CUST_INFO_CHNG_DT                    /*고객정보변경일시        */
                    , A.SMS_RCV_AGREE_DT                    /*SMS수신동의일시        */
                    , A.EMAIL_RCV_AGREE_DT                    /*이메일수신동의일시        */
                    , A.ALRM_TK_RCV_AGREE_DT                    /*알람톡수신동의일시        */
                    , A.PUSH_RCV_AGREE_DT                    /*PUSH수신동의일시        */
                    , A.MSHIP_LAST_LOGIN_DT                    /*멤버십최종로그인일시        */
                    , A.MSHIP_LAST_STOR_VISIT_DT                    /*멤버십최종매장방문일시        */
                    , A.MSHIP_SBSC_DT                    /*멤버십가입일시        */
                    , A.MSHIP_GRADE_CHNG_DT                    /*멤버십등급변경일시        */
                    , A.MSHIP_INFO_CHNG_DT                    /*멤버십정보변경일시        */
                    , A.MSHIP_LEAVE_DT                    /*멤버십탈퇴일시        */
                    , A.BLLK_REG_DT                    /*주의고객등록일시        */
                    , A.AMD_DT                    /*수정일시        */
                    , A.REG_DT                    /*등록일시        */
                    , A.FAMLY_REL_CD
                 FROM CRM_CUST_BAS A
        <include refid="sqlConditions"/>
               ORDER BY ITG_CUST_NO DESC
        <include refid="com.ceragem.api.crm.dao.CrmCommonDao.pagingFooter"/>
        ) A LEFT JOIN  (<include refid="sqlContactInfo"/>) B ON A.ITG_CUST_NO= B.ITG_CUST_NO
        ORDER BY A.ITG_CUST_NO DESC
    </select>
    <select id="select" resultType="com.ceragem.api.crm.model.CrmCustVo">
               SELECT /* com.ceragem.api.crm.dao.CrmCustBasDao.select */<include refid="sqlSelectCols"/>
               		, B.TEL_NO_001  INST_TEL_NO
                    , B.DISTRCT_CD_001 INST_DISTRCT_CD
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = B.DISTRCT_CD_001 AND  COMN_CD_LVL_NO = 2) INST_DISTRCT_CD_NM
                    , B.ZIP_CD_001 INST_ZIP_CD
                    , B.ADDR_1_CTNTS_001 INST_ADDR1
                    , B.ADDR_2_CTNTS_001 INST_ADDR2
                    , B.TEL_NO_002 JOB_TEL_NO
                    , B.DISTRCT_CD_002 JOB_DISTRCT_CD
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = B.DISTRCT_CD_002 AND  COMN_CD_LVL_NO = 2) JOB_DISTRCT_CD_NM
                    , B.ZIP_CD_002 JOB_ZIP_CD
                    , B.ADDR_1_CTNTS_002 JOB_ADDR1
                    , B.ADDR_2_CTNTS_002 JOB_ADDR2
                    , B.TEL_NO_003 HOME_TEL_NO
                    , B.DISTRCT_CD_003 HOME_DISTRCT_CD
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = B.DISTRCT_CD_003 AND  COMN_CD_LVL_NO = 2) HOME_DISTRCT_CD_NM
                    , B.ZIP_CD_003 HOME_ZIP_CD
                    , B.ADDR_1_CTNTS_003 HOME_ADDR1
                    , B.ADDR_2_CTNTS_003 HOME_ADDR2
                    , (SELECT LISTAGG( CM.COMN_CD_NM,',') WITHIN GROUP(ORDER BY LVL) FROM  (SELECT REGEXP_SUBSTR(A.INTRST_FILD_CD, '[^,]+', 1, LEVEL) CD, LEVEL LVL  FROM DUAL CONNECT BY REGEXP_SUBSTR(A.INTRST_FILD_CD, '[^,]+', 1, LEVEL) IS NOT NULL) DL, CRM_COMN_CD_BAS CM WHERE CM.COMN_CD = DL.CD AND CM.COMN_CD_LVL_NO = 2 AND CM.TOP_COMN_CD = 'CU060'  ) INTRST_FILD_CD_NM
                 	, (SELECT MSHIP_PLCY_BAS_NO FROM CRM_MSHIP_PLCY_BAS WHERE STATUS_CD = 'Y' AND MSHP_GRADE_CD = A.MSHIP_GRADE_CD AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN APPLY_STD_STA_YMD AND APPLY_STD_END_YMD AND ROWNUM = 1) ORG_MSHIP_PLCY_BAS_NO
                 FROM CRM_CUST_BAS A
                 LEFT JOIN  (<include refid="sqlContactInfo"/>) B ON A.ITG_CUST_NO= B.ITG_CUST_NO
        		WHERE A.ITG_CUST_NO       =       #{itgCustNo}
    </select>
    <select id="selectBasic" resultType="com.ceragem.api.crm.model.CrmCustVo">
                SELECT /* com.ceragem.api.crm.dao.CrmCustBasDao.selectBasic */ <include refid="sqlCols" />
                  FROM CRM_CUST_BAS A
                 WHERE A.ITG_CUST_NO       =       #{itgCustNo}
    </select>
    <select id="selectLoginId"  resultType="com.ceragem.api.crm.model.CrmCustVo">
               SELECT /* com.ceragem.api.crm.dao.CrmCustBasDao.selectLoginId */<include refid="sqlSelectCols"/>
               		, B.TEL_NO_001  INST_TEL_NO
                    , B.DISTRCT_CD_001 INST_DISTRCT_CD
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = B.DISTRCT_CD_001 AND  COMN_CD_LVL_NO = 2) INST_DISTRCT_CD_NM
                    , B.ZIP_CD_001 INST_ZIP_CD
                    , B.ADDR_1_CTNTS_001 INST_ADDR1
                    , B.ADDR_2_CTNTS_001 INST_ADDR2
                    , B.TEL_NO_002 JOB_TEL_NO
                    , B.DISTRCT_CD_002 JOB_DISTRCT_CD
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = B.DISTRCT_CD_002 AND  COMN_CD_LVL_NO = 2) JOB_DISTRCT_CD_NM
                    , B.ZIP_CD_002 JOB_ZIP_CD
                    , B.ADDR_1_CTNTS_002 JOB_ADDR1
                    , B.ADDR_2_CTNTS_002 JOB_ADDR2
                    , B.TEL_NO_003 HOME_TEL_NO
                    , B.DISTRCT_CD_003 HOME_DISTRCT_CD
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = B.DISTRCT_CD_003 AND  COMN_CD_LVL_NO = 2) HOME_DISTRCT_CD_NM
                    , B.ZIP_CD_003 HOME_ZIP_CD
                    , B.ADDR_1_CTNTS_003 HOME_ADDR1
                    , B.ADDR_2_CTNTS_003 HOME_ADDR2
                 FROM CRM_CUST_BAS A
                 LEFT JOIN  (<include refid="sqlContactInfo"/>) B ON A.ITG_CUST_NO= B.ITG_CUST_NO
        	    WHERE A.MSHIP_LOGIN_ID = #{mshipLoginId}
<!--         	      AND CUST_STATUS_CD != '003'  -->
                  AND ROWNUM = 1
    </select>
    <select id="selectNamePhone" resultType="com.ceragem.api.crm.model.CrmCustVo">
            SELECT /* com.ceragem.api.crm.dao.CrmCustBasDao.selectNamePhone */<include refid="sqlSelectCols"/>
                    , B.TEL_NO_001  INST_TEL_NO
                    , B.DISTRCT_CD_001 INST_DISTRCT_CD
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = B.DISTRCT_CD_001 AND  COMN_CD_LVL_NO = 2) INST_DISTRCT_CD_NM
                    , B.ZIP_CD_001 INST_ZIP_CD
                    , B.ADDR_1_CTNTS_001 INST_ADDR1
                    , B.ADDR_2_CTNTS_001 INST_ADDR2
                    , B.TEL_NO_002 JOB_TEL_NO
                    , B.DISTRCT_CD_002 JOB_DISTRCT_CD
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = B.DISTRCT_CD_002 AND  COMN_CD_LVL_NO = 2) JOB_DISTRCT_CD_NM
                    , B.ZIP_CD_002 JOB_ZIP_CD
                    , B.ADDR_1_CTNTS_002 JOB_ADDR1
                    , B.ADDR_2_CTNTS_002 JOB_ADDR2
                    , B.TEL_NO_003 HOME_TEL_NO
                    , B.DISTRCT_CD_003 HOME_DISTRCT_CD
                    , (SELECT COMN_CD_NM FROM CRM_COMN_CD_BAS WHERE TOP_COMN_CD = 'CU100' AND COMN_CD = B.DISTRCT_CD_003 AND  COMN_CD_LVL_NO = 2) HOME_DISTRCT_CD_NM
                    , B.ZIP_CD_003 HOME_ZIP_CD
                    , B.ADDR_1_CTNTS_003 HOME_ADDR1
                    , B.ADDR_2_CTNTS_003 HOME_ADDR2
                 FROM CRM_CUST_BAS A
                 LEFT JOIN  (<include refid="sqlContactInfo"/>) B ON A.ITG_CUST_NO= B.ITG_CUST_NO
                WHERE A.CUST_NM = #{custNm}
                  AND A.MPHON_NO = #{mphonNo}
                  AND ROWNUM = 1
    </select>

    <select id="selectMphone" resultType="com.ceragem.api.crm.model.CrmCustVo">
               SELECT /* com.ceragem.api.crm.dao.CrmCustBasDao.selectMphone */ A.ITG_CUST_NO
                    , A.CUST_NM
                    , DECODE(A.CUST_STATUS_CD ,'003',B.MPHON_NO,A.MPHON_NO)  MPHON_NO          
                 FROM CRM_CUST_BAS A
                 LEFT JOIN CRM_DORM_CUST_BAS B ON  A.ITG_CUST_NO = B.ITG_CUST_NO AND A.CUST_STATUS_CD = '003'
                WHERE A.ITG_CUST_NO = #{itgCustNo}
                  AND ROWNUM = 1 
    </select>
    <insert id="insert">
    	<selectKey order="BEFORE" keyProperty="itgCustNo" resultType="String">
    		SELECT FN_CRM_AUTO_SEQ('CST') FROM DUAL
    	</selectKey>
                INSERT /* com.ceragem.api.crm.dao.CrmCustBasDao.insert */ INTO CRM_CUST_BAS (
        <include refid="sqlCols"/>
                 ) SELECT
                       #{itgCustNo}
                     , NVL(#{corpDivYn},'N')
                     , #{custNm}
                     , #{gndrCd}
                     , #{birthday}
                     , #{bizNo}
                     , #{corpRegNo}
                     , #{corpTelNo}
                     , NVL(#{fornYn},'N')
                     , #{repNm}
                     , #{mphonNo} 
                     , SUBSTRB(#{mphonNo},-4)
                     , #{emailAddr}
                     , #{picNm}
                     , #{picMphonNo}
                     , #{picMphonBkDgtNo}
                     , #{picEmailAddr} 
                     , TO_DATE(#{indiInfoValidPerdStaDt},'YYYYMMDDHH24MISS')
                     , TO_DATE(#{indiInfoValidPerdEndDt},'YYYYMMDDHH24MISS')
                     , NVL(#{custStatusCd},'001')
                     , TO_DATE(#{custStatusChngDt},'YYYYMMDDHH24MISS')
                     , TO_DATE(#{custInfoChngDt},'YYYYMMDDHH24MISS')
                     , NVL(#{custTypeCd},'001')
                     , NVL(#{custDivCd},'001')
                     , #{distrctCd}
                     , #{zipCd}
                     , #{addr1Ctnts}
                     , #{addr2Ctnts}  
                     , #{rcmdStorNo}
                     , #{rcmdrCustNo}
                     , #{rcmdExecvdempNo}
                     , NVL(#{marryYn},'N')
                     , #{repHshldNo}
                     , #{famlyRelCd}
                     , #{dwelNfpyCd}
                     , #{intrstFildCd}
                     , #{repGodsNo}
                     , #{repUseCustDivCd}
                     , NVL(#{smsRcvAgreeYn},'N')
                     , TO_DATE(#{smsRcvAgreeDt},'YYYYMMDDHH24MISS')
                     , #{smsRcvAgreeChlCd}
                     , NVL(#{emailRcvAgreeYn},'N')
                     , TO_DATE(#{emailRcvAgreeDt},'YYYYMMDDHH24MISS')
                     , #{emailRcvAgreeChlCd}
                     , NVL(#{alrmTkRcvAgreeYn},'N')
                     , TO_DATE(#{alrmTkRcvAgreeDt},'YYYYMMDDHH24MISS')
                     , #{alrmTkRcvAgreeChlCd}
                     , NVL(#{pushRcvAgreeYn},'N')
                     , TO_DATE(#{pushRcvAgreeDt},'YYYYMMDDHH24MISS')
                     , #{pushRcvAgreeChlCd}
                     , NVL(#{ciCertfYn},'N')
                     , #{ci}
                     , NVL(#{diCertfYn},'N')
                     , #{di}
                     , NVL(#{rcvRfslYn},'N')
                     , NVL(#{mshipSbscYn},'N')
                     , #{mshipLoginId}
                     , #{mshipSbtNo}
                     , #{mshipLoginPwd}
                     , TO_DATE(#{mshipLastLoginDt},'YYYYMMDDHH24MISS')
                     , #{mshipLastLoginIpAddr}
                     , TO_DATE(#{mshipLastStorVisitDt},'YYYYMMDDHH24MISS')
                     , #{mshipLastVisitStorNo}
                     , NVL(#{mshipTypeCd},'003')
                     , TO_DATE(#{mshipSbscDt},'YYYYMMDDHH24MISS')
                     , NVL(#{mshipGradeCd},'001')
                     , TO_DATE(#{mshipGradeChngDt},'YYYYMMDDHH24MISS')
                     , TO_DATE(#{mshipInfoChngDt},'YYYYMMDDHH24MISS')
                     , #{mshipInfoConfrExecvdempNo}
                     , #{cprtExecvdempNo}
                     , TO_DATE(#{mshipLeaveDt},'YYYYMMDDHH24MISS')
                     , #{extncPointLmtScore}
                     , #{accumPointLmtScore}
                     , #{remainPointScore}
                     , #{mshipChlCd}
                     , #{bllkRegStorNo}
                     , NVL(#{bllkmshpYn},'N')
                     , #{bllkRegChlCd}
                     , #{bllkRegWhyCtnts}
                     , TO_DATE(#{bllkRegDt},'YYYYMMDDHH24MISS')
                     , NVL(#{prtctFamlyYn},'N')
                     , NVL(#{regChlCd},'CRM')
                     , NVL(#{dormPerdCd},1)
                     , #{appPushTokn}
					 , #{exprnYn}
                     , NULL
                     , #{regrId}
                     , SYSDATE
                     , #{regrId}
                     , SYSDATE
                 FROM DUAL 
                WHERE NOT EXISTS(SELECT 1 FROM CRM_CUST_BAS WHERE MPHON_NO = #{mphonNo}  AND CUST_NM = #{custNm})
    </insert>
    <insert id="insertCard">
        INSERT /*com.ceragem.api.crm.dao.CrmCustBasDao.insertCard */INTO CRM_CARD_PBLS_HST (
                      CARD_PBLS_HST_SEQ                    /*카드발행이력일련번호        */
                    , ITG_CUST_NO                    /*통합고객번호        */
                    , CARD_BAS_NO                    /*카드기본번호        */
                    , CARD_TYPE_CD                    /*카드유형코드        */
                    , CARD_DIV_CD                    /*카드구분코드        */
                    , MSHP_NM                    /*회원명        */
                    , MPHON_NO                    /*이동전화번호        */
                    , MSHIP_GRADE_CD                    /*멤버십등급코드        */
                    , MSHIP_CARD_BAS_NO                    /*멤버십카드기본번호        */
                    , USE_YN                    /*사용여부        */
                    , AMDR_ID                    /*수정자ID        */
                    , AMD_DT                    /*수정일시        */
                    , REGR_ID                    /*등록자ID        */
                    , REG_DT                    /*등록일시        */
                    , REG_CHL_CD                    /*등록채널코드        공통코드 : S000        [CRM : CRM , CTC : 상담 , AS : AS , SAP : SAP , POS : POS , BOS : BOS , MEM : 멤버십 , CERA : 세라체크 , DNA : 세라DNA , IoT : IoT]*/
                   )
               SELECT FN_CRM_AUTO_SEQ('CRD')
                     , B.ITG_CUST_NO
                     , FN_LUHN_CARD('45')   
                     , A.CARD_TYPE_CD
                     , '001'  
                     , B.CUST_NM
                     , B.MPHON_NO
                     , '002'
                     , A.MSHIP_CARD_BAS_NO
                     , 'Y'
                     , 'CRM'
                     , SYSDATE
                     , 'CRM'
                     , SYSDATE
                     , 'CRM'                                         
                  FROM ( SELECT A.*
                              , ROW_NUMBER() OVER (ORDER BY REG_DT DESC) RNUM  
                           FROM CRM_MSHIP_CARD_BAS A
                          WHERE CARD_TYPE_CD = '001'
                            AND STATUS_CD = 'Y' ) A 
                 INNER JOIN CRM_CUST_BAS B ON A.RNUM = 1 AND B.ITG_CUST_NO = #{itgCustNo} AND B.ITG_CUST_NO NOT IN (SELECT ITG_CUST_NO FROM CRM_CARD_PBLS_HST WHERE ITG_CUST_NO =   #{itgCustNo})
                        
    </insert>
    <insert id="insertMembership">
    	<selectKey order="BEFORE" keyProperty="itgCustNo" resultType="String">
    		SELECT FN_CRM_AUTO_SEQ('CST') FROM DUAL
    	</selectKey>
                INSERT /* com.ceragem.api.crm.dao.CrmCustBasDao.insertMembership */ INTO CRM_CUST_BAS (
        <include refid="sqlCols"/>
                 ) SELECT
                       #{itgCustNo}
                     , NVL(#{corpDivYn},'N')
                     , #{custNm}
                     , #{gndrCd}
                     , #{birthday}
                     , #{bizNo}
                     , #{corpRegNo}
                     , #{corpTelNo}
                     , NVL(#{fornYn},'N')
                     , #{repNm}
                     , #{mphonNo}  
                     , SUBSTRB(#{mphonNo},-4)
                     , #{emailAddr}  
                     , #{picNm}
                     , #{picMphonNo}
                     , #{picMphonBkDgtNo}
                     , #{picEmailAddr}
                     , TO_DATE(#{indiInfoValidPerdStaDt},'YYYYMMDDHH24MISS')
                     , TO_DATE(#{indiInfoValidPerdEndDt},'YYYYMMDDHH24MISS')
                     , NVL(#{custStatusCd},'001')
                     , TO_DATE(#{custStatusChngDt},'YYYYMMDDHH24MISS')
                     , TO_DATE(#{custInfoChngDt},'YYYYMMDDHH24MISS')
                     , NVL(#{custTypeCd},'001')
                     , NVL(#{custDivCd},'001')
                     , #{distrctCd}
                     , #{zipCd}
                     , #{addr1Ctnts}
                     , #{addr2Ctnts}
                     , #{rcmdStorNo}
                     , #{rcmdrCustNo}
                     , #{rcmdExecvdempNo}
                     , NVL(#{marryYn},'N')
                     , #{repHshldNo}
                     , #{famlyRelCd}
                     , #{dwelNfpyCd}
                     , #{intrstFildCd}
                     , #{repGodsNo}
                     , #{repUseCustDivCd}
                     , NVL(#{smsRcvAgreeYn},'N')
                     , TO_DATE(#{smsRcvAgreeDt},'YYYYMMDDHH24MISS')
                     , #{smsRcvAgreeChlCd}
                     , NVL(#{emailRcvAgreeYn},'N')
                     , TO_DATE(#{emailRcvAgreeDt},'YYYYMMDDHH24MISS')
                     , #{emailRcvAgreeChlCd}
                     , NVL(#{alrmTkRcvAgreeYn},'N')
                     , TO_DATE(#{alrmTkRcvAgreeDt},'YYYYMMDDHH24MISS')
                     , #{alrmTkRcvAgreeChlCd}
                     , NVL(#{pushRcvAgreeYn},'N')
                     , TO_DATE(#{pushRcvAgreeDt},'YYYYMMDDHH24MISS')
                     , #{pushRcvAgreeChlCd}
                     , NVL(#{ciCertfYn},'N')
                     , #{ci}
                     , NVL(#{diCertfYn},'N')
                     , #{di}
                     , NVL(#{rcvRfslYn},'N')
                     , 'Y'
                     , #{mshipLoginId}
                     , #{mshipSbtNo}
                     , #{mshipLoginPwd}
                     , TO_DATE(#{mshipLastLoginDt},'YYYYMMDDHH24MISS')
                     , #{mshipLastLoginIpAddr}
                     , TO_DATE(#{mshipLastStorVisitDt},'YYYYMMDDHH24MISS')
                     , #{mshipLastVisitStorNo}
                     , NVL(#{mshipTypeCd},'003')
                     , NVL(TO_DATE(#{mshipSbscDt},'YYYYMMDDHH24MISS'),SYSDATE)
                     , NVL(DECODE(#{mshipGradeCd},'001','002',#{mshipGradeCd}),'002')
                     , SYSDATE
                     , SYSDATE
                     , #{mshipInfoConfrExecvdempNo}
                     , #{cprtExecvdempNo}
                     , NULL
                     , #{extncPointLmtScore}
                     , #{accumPointLmtScore}
                     , #{remainPointScore}
                     , NVL(#{mshipChlCd},#{regChlCd})
                     , #{bllkRegStorNo}
                     , NVL(#{bllkmshpYn},'N')
                     , #{bllkRegChlCd}
                     , #{bllkRegWhyCtnts}
                     , TO_DATE(#{bllkRegDt},'YYYYMMDDHH24MISS')
                     , NVL(#{prtctFamlyYn},'N')
                     , NVL(#{regChlCd},#{amdrId})
                     , NVL(#{dormPerdCd},1)
                     , #{appPushTokn}
					 , #{exprnYn}
                     , NULL
                     , #{regrId}
                     , SYSDATE
                     , #{regrId}
                     , SYSDATE
                 FROM DUAL 
                WHERE NOT EXISTS(SELECT 1 FROM CRM_CUST_BAS WHERE MPHON_NO = #{mphonNo}  AND CUST_NM = #{custNm})
    </insert>
    <update id="update">
               UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.udate */
                  SET CORP_DIV_YN                             =         NVL(#{corpDivYn},'N')
                    , CUST_NM                                 =         #{custNm}
                    , GNDR_CD                                 =         #{gndrCd}
                    , BIRTHDAY                                =         #{birthday}
                    , BIZ_NO                                  =         #{bizNo}
                    , CORP_REG_NO                             =         #{corpRegNo}
                    , CORP_TEL_NO                             =         #{corpTelNo}
                    , FORN_YN                                 =         NVL(#{fornYn},'N')
                    , REP_NM                                  =         #{repNm}
                    , MPHON_NO                                =         #{mphonNo} 
                    , MPHON_BK_DGT_NO                         =         SUBSTRB( #{mphonNo},-4)
                    , EMAIL_ADDR                              =         #{emailAddr}
                    , PIC_NM                                  =         #{picNm}
                    , PIC_MPHON_NO                            =         #{picMphonNo}
                    , PIC_MPHON_BK_DGT_NO                     =         #{picMphonBkDgtNo}
                    , PIC_EMAIL_ADDR                          =         #{picEmailAddr}
                    , INDI_INFO_VALID_PERD_STA_DT             =         TO_DATE(#{indiInfoValidPerdStaDt},'YYYYMMDDHH24MISS')
                    , INDI_INFO_VALID_PERD_END_DT             =         TO_DATE(#{indiInfoValidPerdEndDt},'YYYYMMDDHH24MISS')
<!--                     , CUST_STATUS_CD                          =         NVL(#{custStatusCd},CUST_STATUS_CD) -->
<!--                     , CUST_STATUS_CHNG_DT                     =         TO_DATE(#{custStatusChngDt},'YYYYMMDDHH24MISS') -->
                    , CUST_INFO_CHNG_DT                       =         TO_DATE(#{custInfoChngDt},'YYYYMMDDHH24MISS')
<!--                     , CUST_TYPE_CD                            =         NVL(#{custTypeCd},CUST_TYPE_CD) -->
                    , CUST_DIV_CD                             =         #{custDivCd}
                    , DISTRCT_CD                              =         #{distrctCd}
                    , ZIP_CD                                  =         #{zipCd}
                    , ADDR_1_CTNTS                            =         #{addr1Ctnts}
                    , ADDR_2_CTNTS                            =         #{addr2Ctnts}
                    , RCMD_STOR_NO                            =         #{rcmdStorNo}
                    , RCMDR_CUST_NO                           =         #{rcmdrCustNo}
                    , RCMD_EXECVDEMP_NO                       =         #{rcmdExecvdempNo}
                    , MARRY_YN                                =         NVL(#{marryYn},'N')
<!--                     , REP_HSHLD_NO                            =         #{repHshldNo} -->
                    , FAMLY_REL_CD                            =         #{famlyRelCd}
                    , DWEL_NFPY_CD                            =         #{dwelNfpyCd}
                    , INTRST_FILD_CD                          =         #{intrstFildCd}
                    , REP_GODS_NO                             =         #{repGodsNo}
                    , REP_USE_CUST_DIV_CD                     =         #{repUseCustDivCd}
<!--                     , SMS_RCV_AGREE_YN                        =         NVL(#{smsRcvAgreeYn},'N') -->
<!--                     , SMS_RCV_AGREE_DT                        =         TO_DATE(#{smsRcvAgreeDt},'YYYYMMDDHH24MISS') -->
<!--                     , SMS_RCV_AGREE_CHL_CD                    =         #{smsRcvAgreeChlCd} -->
<!--                     , EMAIL_RCV_AGREE_YN                      =         NVL(#{emailRcvAgreeYn},'N') -->
<!--                     , EMAIL_RCV_AGREE_DT                      =         TO_DATE(#{emailRcvAgreeDt},'YYYYMMDDHH24MISS') -->
<!--                     , EMAIL_RCV_AGREE_CHL_CD                  =         #{emailRcvAgreeChlCd} -->
<!--                     , ALRM_TK_RCV_AGREE_YN                    =         NVL(#{alrmTkRcvAgreeYn},'N') -->
<!--                     , ALRM_TK_RCV_AGREE_DT                    =         TO_DATE(#{alrmTkRcvAgreeDt},'YYYYMMDDHH24MISS') -->
<!--                     , ALRM_TK_RCV_AGREE_CHL_CD                =         #{alrmTkRcvAgreeChlCd} -->
<!--                     , PUSH_RCV_AGREE_YN                       =         NVL(#{pushRcvAgreeYn},'N') -->
<!--                     , PUSH_RCV_AGREE_DT                       =         TO_DATE(#{pushRcvAgreeDt},'YYYYMMDDHH24MISS') -->
<!--                     , PUSH_RCV_AGREE_CHL_CD                   =         #{pushRcvAgreeChlCd} -->
                    , CI_CERTF_YN                             =         NVL(#{ciCertfYn},'N')
                    , CI                                      =         #{ci}
                    , DI_CERTF_YN                             =         NVL(#{diCertfYn},'N')
                    , DI                                      =         #{di}
                    , RCV_RFSL_YN                             =         NVL(#{rcvRfslYn},'N')
                    , MSHIP_SBSC_YN                           =         NVL(#{mshipSbscYn},'N')
                    , MSHIP_LOGIN_ID                          =         #{mshipLoginId}
                    , MSHIP_SBT_NO                            =         #{mshipSbtNo}
                    , MSHIP_LOGIN_PWD                         =         NVL(#{mshipLoginPwd},MSHIP_LOGIN_PWD)
<!--                     , MSHIP_LAST_LOGIN_DT                     =         TO_DATE(#{mshipLastLoginDt},'YYYYMMDDHH24MISS') -->
<!--                     , MSHIP_LAST_LOGIN_IP_ADDR                =         #{mshipLastLoginIpAddr} -->
<!--                     , MSHIP_LAST_STOR_VISIT_DT                =         TO_DATE(#{mshipLastStorVisitDt},'YYYYMMDDHH24MISS') -->
<!--                     , MSHIP_LAST_VISIT_STOR_NO                =         #{mshipLastVisitStorNo} -->
<!--                     , MSHIP_TYPE_CD                           =         NVL(#{mshipTypeCd},MSHIP_TYPE_CD) -->
<!--                     , MSHIP_SBSC_DT                           =         TO_DATE(#{mshipSbscDt},'YYYYMMDDHH24MISS') -->
<!--                     , MSHIP_GRADE_CD                          =         NVL(#{mshipGradeCd},'002') -->
<!--                     , MSHIP_GRADE_CHNG_DT                     =         TO_DATE(#{mshipGradeChngDt},'YYYYMMDDHH24MISS') -->
<!--                     , MSHIP_INFO_CHNG_DT                      =         TO_DATE(#{mshipInfoChngDt},'YYYYMMDDHH24MISS') -->
                    , MSHIP_INFO_CONFR_EXECVDEMP_NO           =         #{mshipInfoConfrExecvdempNo}
                    , CPRT_EXECVDEMP_NO                       =         #{cprtExecvdempNo}
<!--                     , MSHIP_LEAVE_DT                          =         TO_DATE(#{mshipLeaveDt},'YYYYMMDDHH24MISS') -->
<!--                     , EXTNC_POINT_LMT_SCORE                   =         #{extncPointLmtScore} -->
<!--                     , ACCUM_POINT_LMT_SCORE                   =         #{accumPointLmtScore} -->
                    , MSHIP_CHL_CD                            =         #{mshipChlCd}
<!--                     , BLLK_REG_STOR_NO                        =         #{bllkRegStorNo} -->
<!--                     , BLLKMSHP_YN                             =         NVL(#{bllkmshpYn},'N') -->
<!--                     , BLLK_REG_CHL_CD                         =         #{bllkRegChlCd} -->
<!--                     , BLLK_REG_WHY_CTNTS                      =         #{bllkRegWhyCtnts} -->
<!--                     , BLLK_REG_DT                             =         TO_DATE(#{bllkRegDt},'YYYYMMDDHH24MISS') -->
                    , PRTCT_FAMLY_YN                          =         NVL(#{prtctFamlyYn},PRTCT_FAMLY_YN) 
                    , DORM_PERD_CD                            =         NVL(#{dormPerdCd},DORM_PERD_CD)
                    , APP_PUSH_TOKN 					      =         #{appPushTokn}
					, EXPRN_YN                                =         #{exprnYn}
<!--                     , REG_CHL_CD                              =         #{regChlCd} -->
                    , AMDR_ID                                 =         #{amdrId}
                    , AMD_DT                                  =         SYSDATE
        <include refid="sqlPkConditions"/>
    </update>
    <update id="updateLastLogin">
         UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateLoginDt */
            SET MSHIP_LAST_LOGIN_DT                     =         NVL(TO_DATE(#{mshipLastLoginDt},'YYYYMMDDHH24MISS'),SYSDATE)
              , MSHIP_LAST_LOGIN_IP_ADDR                =         #{mshipLastLoginIpAddr}
           <include refid="sqlPkConditions"/>
            AND MSHIP_LOGIN_ID IS NOT NULL
            AND CUST_STATUS_CD != '003'
    </update>
    <update id="updateMembership">
               UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateMembership */
                  SET CORP_DIV_YN                             =         NVL(#{corpDivYn},'N')
                    , CUST_NM                                 =         #{custNm}
                    , GNDR_CD                                 =         #{gndrCd}
                    , BIRTHDAY                                =         #{birthday}
                    , BIZ_NO                                  =         #{bizNo}
                    , CORP_REG_NO                             =         #{corpRegNo}
                    , CORP_TEL_NO                             =         #{corpTelNo}
                    , FORN_YN                                 =         NVL(#{fornYn},'N')
                    , REP_NM                                  =         #{repNm}
                    , MPHON_NO                                =         #{mphonNo} 
                    , MPHON_BK_DGT_NO                         =         SUBSTRB(#{mphonNo},-4)
                    , EMAIL_ADDR                              =         #{emailAddr}
                    , PIC_NM                                  =         #{picNm}
                    , PIC_MPHON_NO                            =         #{picMphonNo}
                    , PIC_MPHON_BK_DGT_NO                     =         #{picMphonBkDgtNo}
                    , PIC_EMAIL_ADDR                          =         #{picEmailAddr}
                    , INDI_INFO_VALID_PERD_STA_DT             =         TO_DATE(#{indiInfoValidPerdStaDt},'YYYYMMDDHH24MISS')
                    , INDI_INFO_VALID_PERD_END_DT             =         TO_DATE(#{indiInfoValidPerdEndDt},'YYYYMMDDHH24MISS')
<!--                     , CUST_STATUS_CD                          =         NVL(#{custStatusCd},CUST_STATUS_CD) -->
<!--                     , CUST_STATUS_CHNG_DT                     =         TO_DATE(#{custStatusChngDt},'YYYYMMDDHH24MISS') -->
                    , CUST_INFO_CHNG_DT                       =         TO_DATE(#{custInfoChngDt},'YYYYMMDDHH24MISS')
                    , CUST_TYPE_CD                            =         NVL(#{custTypeCd},'001')
                    , CUST_DIV_CD                             =         #{custDivCd}
                    , DISTRCT_CD                              =         #{distrctCd}
                    , ZIP_CD                                  =         #{zipCd}
                    , ADDR_1_CTNTS                            =         #{addr1Ctnts}
                    , ADDR_2_CTNTS                            =         #{addr2Ctnts}
                    , RCMD_STOR_NO                            =         #{rcmdStorNo}
                    , RCMDR_CUST_NO                           =         #{rcmdrCustNo}
                    , RCMD_EXECVDEMP_NO                       =         #{rcmdExecvdempNo}
                    , MARRY_YN                                =         NVL(#{marryYn},'N')
<!--                     , REP_HSHLD_NO                            =         #{repHshldNo} -->
                    , FAMLY_REL_CD                            =         #{famlyRelCd}
                    , DWEL_NFPY_CD                            =         #{dwelNfpyCd}
                    , INTRST_FILD_CD                          =         #{intrstFildCd}
                    , REP_GODS_NO                             =         #{repGodsNo}
                    , REP_USE_CUST_DIV_CD                     =         #{repUseCustDivCd}
<!--                     , SMS_RCV_AGREE_YN                        =         NVL(#{smsRcvAgreeYn},'N') -->
<!--                     , SMS_RCV_AGREE_DT                        =         TO_DATE(#{smsRcvAgreeDt},'YYYYMMDDHH24MISS') -->
<!--                     , SMS_RCV_AGREE_CHL_CD                    =         #{smsRcvAgreeChlCd} -->
<!--                     , EMAIL_RCV_AGREE_YN                      =         NVL(#{emailRcvAgreeYn},'N') -->
<!--                     , EMAIL_RCV_AGREE_DT                      =         TO_DATE(#{emailRcvAgreeDt},'YYYYMMDDHH24MISS') -->
<!--                     , EMAIL_RCV_AGREE_CHL_CD                  =         #{emailRcvAgreeChlCd} -->
<!--                     , ALRM_TK_RCV_AGREE_YN                    =         NVL(#{alrmTkRcvAgreeYn},'N') -->
<!--                     , ALRM_TK_RCV_AGREE_DT                    =         TO_DATE(#{alrmTkRcvAgreeDt},'YYYYMMDDHH24MISS') -->
<!--                     , ALRM_TK_RCV_AGREE_CHL_CD                =         #{alrmTkRcvAgreeChlCd} -->
<!--                     , PUSH_RCV_AGREE_YN                       =         NVL(#{pushRcvAgreeYn},'N') -->
<!--                     , PUSH_RCV_AGREE_DT                       =         TO_DATE(#{pushRcvAgreeDt},'YYYYMMDDHH24MISS') -->
<!--                     , PUSH_RCV_AGREE_CHL_CD                   =         #{pushRcvAgreeChlCd} -->
                    , CI_CERTF_YN                             =         NVL(#{ciCertfYn},'N')
                    , CI                                      =         #{ci}
                    , DI_CERTF_YN                             =         NVL(#{diCertfYn},'N')
                    , DI                                      =         #{di}
                    , RCV_RFSL_YN                             =         NVL(#{rcvRfslYn},'N')
                    , MSHIP_SBSC_YN                           =         'Y'
                    , MSHIP_LOGIN_ID                          =         NVL(#{mshipLoginId},MSHIP_LOGIN_ID)
                    , MSHIP_SBT_NO                            =         NVL(#{mshipSbtNo},MSHIP_SBT_NO)
                    , MSHIP_LOGIN_PWD                         =         #{mshipLoginPwd}
                    , MSHIP_LAST_LOGIN_DT                     =         TO_DATE(#{mshipLastLoginDt},'YYYYMMDDHH24MISS')
<!--                     , MSHIP_LAST_LOGIN_IP_ADDR                =         #{mshipLastLoginIpAddr} -->
<!--                     , MSHIP_LAST_STOR_VISIT_DT                =         TO_DATE(#{mshipLastStorVisitDt},'YYYYMMDDHH24MISS') -->
<!--                     , MSHIP_LAST_VISIT_STOR_NO                =         #{mshipLastVisitStorNo} -->
<!--                     , MSHIP_TYPE_CD                           =         NVL(#{mshipTypeCd},'001') -->
                    , MSHIP_SBSC_DT                           =         NVL(TO_DATE(#{mshipSbscDt},'YYYYMMDDHH24MISS'),NVL(MSHIP_SBSC_DT,SYSDATE))
                    , MSHIP_GRADE_CD                          =         NVL(DECODE(#{mshipGradeCd},'001','002',#{mshipGradeCd}),'002')
                    , MSHIP_GRADE_CHNG_DT                     =         NVL(TO_DATE(#{mshipGradeChngDt},'YYYYMMDDHH24MISS'),NVL(MSHIP_GRADE_CHNG_DT,SYSDATE))
                    , MSHIP_INFO_CHNG_DT                      =         SYSDATE
                    , MSHIP_INFO_CONFR_EXECVDEMP_NO           =         #{mshipInfoConfrExecvdempNo}
                    , CPRT_EXECVDEMP_NO                       =         #{cprtExecvdempNo}
<!--                     , MSHIP_LEAVE_DT                          =         TO_DATE(#{mshipLeaveDt},'YYYYMMDDHH24MISS') -->
<!--                     , EXTNC_POINT_LMT_SCORE                   =         #{extncPointLmtScore} -->
<!--                     , ACCUM_POINT_LMT_SCORE                   =         #{accumPointLmtScore} -->
                    , MSHIP_CHL_CD                            =         #{mshipChlCd}
<!--                     , BLLK_REG_STOR_NO                        =         #{bllkRegStorNo} -->
<!--                     , BLLKMSHP_YN                             =         NVL(#{bllkmshpYn},'N') -->
<!--                     , BLLK_REG_CHL_CD                         =         #{bllkRegChlCd} -->
<!--                     , BLLK_REG_WHY_CTNTS                      =         #{bllkRegWhyCtnts} -->
<!--                     , BLLK_REG_DT                             =         TO_DATE(#{bllkRegDt},'YYYYMMDDHH24MISS') -->
                    , PRTCT_FAMLY_YN                          =         NVL(#{prtctFamlyYn},PRTCT_FAMLY_YN) 
<!--                     , REG_CHL_CD                              =         #{regChlCd} -->
                    , DORM_PERD_CD                            =         NVL(#{dormPerdCd},DORM_PERD_CD)
                    , APP_PUSH_TOKN                           =         #{appPushTokn}
                    , EXPRN_YN                                =         #{exprnYn}
                    , AMDR_ID                                 =         #{amdrId}
                    , AMD_DT                                  =         SYSDATE
        <include refid="sqlPkConditions"/>
    </update>
    <insert id="insertDormant">
    			INSERT /* com.ceragem.api.crm.dao.CrmCustBasDao.insertDormant */
    			  INTO CRM_DORM_CUST_BAS (
        			   <include refid="sqlCols"/>
                 )
                SELECT <include refid="sqlDormCols"/>
                     , #{amdrId}
                     , SYSDATE
                     , #{regrId}
                     , SYSDATE
                  FROM CRM_CUST_BAS A
        <include refid="sqlPkConditions"/>
                   AND  A.ITG_CUST_NO NOT IN (
                     SELECT ITG_CUST_NO 
                       FROM CRM_DORM_CUST_BAS 
                   ) 
    </insert>
    <update id="updateDuplication">
                UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateDuplication */
                   SET CUST_NM = CUST_NM || '_BK'  
                     , CUST_STATUS_CD                          =         NVL(#{custStatusCd},'001')
                     , CUST_STATUS_CHNG_DT                     =         SYSDATE
    </update>
    
    <update id="updateDelete">
               UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateDelete */
                  SET 
                    <choose>
                        <when test="custStatusCd != null and '002'.toString().equals(custStatusCd)">
                      CUST_STATUS_CD                          =         '002'
                    </when>
                    <otherwise>
                      CUST_STATUS_CD                          =         '003'
                    , CUST_NM                                 =         '탈퇴자'
                    , MPHON_NO                                =         FN_CRM_AUTO_SEQ('EXT')
                    , MPHON_BK_DGT_NO                         =         ''
                    , MSHIP_LEAVE_DT                          =         SYSDATE
<!--                     , GNDR_CD                                 =         '' -->
<!--                     , BIRTHDAY                                =         '' -->
<!--                     , BIZ_NO                                  =         '' -->
<!--                     , CORP_REG_NO                             =         '' -->
<!--                     , CORP_TEL_NO                             =         '' -->
<!--                     , FORN_YN                                 =         'N' -->
<!--                     , REP_NM                                  =         '' -->
                    , EMAIL_ADDR                              =         ''
<!--                     , PIC_NM                                  =         '' -->
<!--                     , PIC_MPHON_NO                            =         '' -->
<!--                     , PIC_MPHON_BK_DGT_NO                     =         '' -->
<!--                     , PIC_EMAIL_ADDR                          =         '' -->
<!--                     , INDI_INFO_VALID_PERD_STA_DT             =         '' -->
<!--                     , INDI_INFO_VALID_PERD_END_DT             =         '' -->
                    , CUST_STATUS_CHNG_DT                     =         SYSDATE
                    , ZIP_CD                                  =         ''
                    , ADDR_1_CTNTS                            =         ''
                    , ADDR_2_CTNTS                            =         ''
                    , RCMD_STOR_NO                            =         ''
                    , MARRY_YN                                =         ''
                    , REP_HSHLD_NO                            =         ''
                    , FAMLY_REL_CD                            =         ''
<!--                     , MSHIP_SBSC_YN                           =         '' -->
                    , MSHIP_LOGIN_ID                          =         ''
<!--                     , MSHIP_SBT_NO                            =         '' -->
<!--                     , MSHIP_LOGIN_PWD                         =         '' -->
<!--                     , MSHIP_LAST_LOGIN_DT                     =         '' -->
<!--                     , MSHIP_LAST_LOGIN_IP_ADDR                =         '' -->
<!--                     , MSHIP_LAST_STOR_VISIT_DT                =         '' -->
<!--                     , MSHIP_LAST_VISIT_STOR_NO                =         '' -->
<!--                     , MSHIP_TYPE_CD                           =         '' -->
<!--                     , MSHIP_SBSC_DT                           =         '' -->
<!--                     , MSHIP_GRADE_CD                          =         '' -->
<!--                     , MSHIP_GRADE_CHNG_DT                     =         '' -->
<!--                     , MSHIP_INFO_CHNG_DT                      =         '' -->
<!--                     , SMS_RCV_AGREE_YN                        =         'N' -->
<!--                     , SMS_RCV_AGREE_DT                        =         '' -->
<!--                     , SMS_RCV_AGREE_CHL_CD                    =         '' -->
<!--                     , EMAIL_RCV_AGREE_YN                      =         'N' -->
<!--                     , EMAIL_RCV_AGREE_DT                      =         NULL -->
<!--                     , EMAIL_RCV_AGREE_CHL_CD                  =         '' -->
<!--                     , ALRM_TK_RCV_AGREE_YN                    =         'N' -->
<!--                     , ALRM_TK_RCV_AGREE_DT                    =         '' -->
<!--                     , ALRM_TK_RCV_AGREE_CHL_CD                =         '' -->
<!--                     , PUSH_RCV_AGREE_YN                       =         'N' -->
<!--                     , PUSH_RCV_AGREE_DT                       =         '' -->
<!--                     , PUSH_RCV_AGREE_CHL_CD                   =         '' -->
                    , CI_CERTF_YN                             =         'N'
                    , CI                                      =         ''
                    , DI_CERTF_YN                             =         'N'
                    , DI                                      =         ''
                    , RCV_RFSL_YN                             =         'N'
<!--                     , CPRT_EXECVDEMP_NO                       =         '' -->
<!--                     , EXTNC_POINT_LMT_SCORE                   =         '' -->
<!--                     , ACCUM_POINT_LMT_SCORE                   =         '' -->
<!--                     , MSHIP_CHL_CD                            =         '' -->
                    , PRTCT_FAMLY_YN                          =         ''
                        </otherwise>
                    </choose>
                    
        <include refid="sqlPkConditions"/>
    </update>
    
    <update id="updateDormant">
               UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateDormant */
                  SET CORP_DIV_YN                             =         NVL(#{corpDivYn},'N')
                    , CUST_NM                                 =         #{custNm}
                    , GNDR_CD                                 =         #{gndrCd}
                    , BIRTHDAY                                =         #{birthday}
                    , BIZ_NO                                  =         #{bizNo}
                    , CORP_REG_NO                             =         #{corpRegNo}
                    , CORP_TEL_NO                             =         #{corpTelNo}
                    , FORN_YN                                 =         NVL(#{fornYn},'N')
                    , REP_NM                                  =         #{repNm}
                    , MPHON_NO                                =         CASE WHEN #{mphonNo} LIKE 'QF%' THEN  #{mphonNo} ELSE #{mphonNo} END 
                    , MPHON_BK_DGT_NO                         =         #{mphonBkDgtNo}
                    , EMAIL_ADDR                              =         CASE WHEN #{emailAddr} LIKE 'QF%' THEN  #{emailAddr} ELSE #{emailAddr} END
                    , PIC_NM                                  =         #{picNm}
                    , PIC_MPHON_NO                            =         #{picMphonNo}
                    , PIC_MPHON_BK_DGT_NO                     =         #{picMphonBkDgtNo}
                    , PIC_EMAIL_ADDR                          =         #{picEmailAddr}
                    , INDI_INFO_VALID_PERD_STA_DT             =         TO_DATE(#{indiInfoValidPerdStaDt},'YYYYMMDDHH24MISS')
                    , INDI_INFO_VALID_PERD_END_DT             =         TO_DATE(#{indiInfoValidPerdEndDt},'YYYYMMDDHH24MISS')
                    , CUST_STATUS_CD                          =         '001'
                    , CUST_STATUS_CHNG_DT                     =         SYSDATE
                    , CUST_INFO_CHNG_DT                       =         TO_DATE(#{custInfoChngDt},'YYYYMMDDHH24MISS')
                    , CUST_TYPE_CD                            =         NVL(#{custTypeCd},CUST_TYPE_CD)
                    , CUST_DIV_CD                             =         #{custDivCd}
                    , DISTRCT_CD                              =         #{distrctCd}
                    , ZIP_CD                                  =         #{zipCd}
                    , ADDR_1_CTNTS                            =         #{addr1Ctnts}
                    , ADDR_2_CTNTS                            =         CASE WHEN #{addr2Ctnts} LIKE 'QF%' THEN  #{addr2Ctnts} ELSE #{addr2Ctnts} END
                    , RCMD_STOR_NO                            =         #{rcmdStorNo}
                    , RCMDR_CUST_NO                           =         #{rcmdrCustNo}
                    , RCMD_EXECVDEMP_NO                       =         #{rcmdExecvdempNo}
                    , MARRY_YN                                =         NVL(#{marryYn},'N')
                    , REP_HSHLD_NO                            =         #{repHshldNo}
                    , FAMLY_REL_CD                            =         #{famlyRelCd}
                    , DWEL_NFPY_CD                            =         #{dwelNfpyCd}
                    , INTRST_FILD_CD                          =         #{intrstFildCd}
                    , REP_GODS_NO                             =         #{repGodsNo}
                    , REP_USE_CUST_DIV_CD                     =         #{repUseCustDivCd}
                    , SMS_RCV_AGREE_YN                        =         NVL(#{smsRcvAgreeYn},'N')
                    , SMS_RCV_AGREE_DT                        =         TO_DATE(#{smsRcvAgreeDt},'YYYYMMDDHH24MISS')
                    , SMS_RCV_AGREE_CHL_CD                    =         #{smsRcvAgreeChlCd}
                    , EMAIL_RCV_AGREE_YN                      =         NVL(#{emailRcvAgreeYn},'N')
                    , EMAIL_RCV_AGREE_DT                      =         TO_DATE(#{emailRcvAgreeDt},'YYYYMMDDHH24MISS')
                    , EMAIL_RCV_AGREE_CHL_CD                  =         #{emailRcvAgreeChlCd}
                    , ALRM_TK_RCV_AGREE_YN                    =         NVL(#{alrmTkRcvAgreeYn},'N')
                    , ALRM_TK_RCV_AGREE_DT                    =         TO_DATE(#{alrmTkRcvAgreeDt},'YYYYMMDDHH24MISS')
                    , ALRM_TK_RCV_AGREE_CHL_CD                =         #{alrmTkRcvAgreeChlCd}
                    , PUSH_RCV_AGREE_YN                       =         NVL(#{pushRcvAgreeYn},'N')
                    , PUSH_RCV_AGREE_DT                       =         TO_DATE(#{pushRcvAgreeDt},'YYYYMMDDHH24MISS')
                    , PUSH_RCV_AGREE_CHL_CD                   =         #{pushRcvAgreeChlCd}
                    , CI_CERTF_YN                             =         NVL(#{ciCertfYn},'N')
                    , CI                                      =         #{ci}
                    , DI_CERTF_YN                             =         NVL(#{diCertfYn},'N')
                    , DI                                      =         #{di}
                    , RCV_RFSL_YN                             =         NVL(#{rcvRfslYn},'N')
                    , CPRT_EXECVDEMP_NO                       =         #{cprtExecvdempNo}
                    , MSHIP_LEAVE_DT                          =         TO_DATE(#{mshipLeaveDt},'YYYYMMDDHH24MISS')
                    , EXTNC_POINT_LMT_SCORE                   =         #{extncPointLmtScore}
                    , ACCUM_POINT_LMT_SCORE                   =         #{accumPointLmtScore}
                    , MSHIP_CHL_CD                            =         #{mshipChlCd}
                    , BLLK_REG_STOR_NO                        =         #{bllkRegStorNo}
                    , BLLKMSHP_YN                             =         NVL(#{bllkmshpYn},'N')
                    , BLLK_REG_CHL_CD                         =         #{bllkRegChlCd}
                    , BLLK_REG_WHY_CTNTS                      =         #{bllkRegWhyCtnts}
                    , BLLK_REG_DT                             =         SYSDATE
                    , PRTCT_FAMLY_YN                          =         NVL(#{prtctFamlyYn},PRTCT_FAMLY_YN)
                    , DORM_PERD_CD                            =         NVL(#{dormPerdCd},DORM_PERD_CD)
                    , APP_PUSH_TOKN                           =         #{appPushTokn}
                    , EXPRN_YN                                =         #{exprnYn}
                    , SALE_AGGR_AMT                           =         #{saleAggrAmt}
        <include refid="sqlPkConditions"/>
    </update>
    <update id="updateBlack">
               UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateBlack */
                  SET BLLK_REG_STOR_NO                        =         #{bllkRegStorNo}
                    , BLLKMSHP_YN                             =         #{bllkmshpYn}
                    , BLLK_REG_CHL_CD                         =         #{bllkRegChlCd}
                    , BLLK_REG_WHY_CTNTS                      =         #{bllkRegWhyCtnts}
                    , BLLK_REG_DT                             =         SYSDATE
        <include refid="sqlPkConditions"/>
    </update>
    <update id="updateRepCntplc"> 
               UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateRepCntplc */
                  SET MPHON_NO                                =         CASE WHEN #{mphonNo} LIKE 'QF%' THEN #{mphonNo} ELSE #{mphonNo}  END 
                    , MPHON_BK_DGT_NO                         =         #{mphonBkDgtNo}
                    , DISTRCT_CD                              =         #{distrctCd}
                    , ZIP_CD                                  =         #{zipCd}
                    , ADDR_1_CTNTS                            =         #{addr1Ctnts}
                    , ADDR_2_CTNTS                            =         CASE WHEN #{addr2Ctnts} LIKE 'QF%' THEN #{addr2Ctnts} ELSE #{addr2Ctnts}  END
        <include refid="sqlPkConditions"/>
    </update>
    <update id="updateRepHshld">
               UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateRepHshld */
                  SET REP_HSHLD_NO                            =         #{repHshldNo}
        <include refid="sqlPkConditions"/>
    </update>
    
    <update id="updateRepHshldDelete">
               UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateRepHshldDelete */
                  SET REP_HSHLD_NO                            =         NULL
                WHERE REP_HSHLD_NO                            =         #{itgCustNo}
    </update>
    <update id="updateRemainPoint">
               UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateRemainPoint */
                  SET REMAIN_POINT_SCORE                      =         #{remainPointScore}
        <include refid="sqlPkConditions"/>
    </update>
    
    <update id="updateLastVisitStore">
               UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateLastVisitStore */
                  SET MSHIP_LAST_STOR_VISIT_DT                =         NVL(TO_DATE(#{mshipLastStorVisitDt},'YYYYMMDDHH24MISS'),SYSDATE)
                    , MSHIP_LAST_VISIT_STOR_NO                =         NVL(#{mshipLastVisitStorNo},MSHIP_LAST_VISIT_STOR_NO)
        <include refid="sqlPkConditions"/>
    </update>
    
    <update id="updateLastPatronStore">
        UPDATE CRM_CUST_PATRON_STOR_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateLastPatronStore */
                  SET RCNTLY_VISIT_DT                =         NVL(TO_DATE(#{mshipLastStorVisitDt},'YYYYMMDDHH24MISS'),SYSDATE)
         WHERE ITG_CUST_NO       =       #{itgCustNo}
           AND STOR_NO           =       #{mshipLastVisitStorNo}
    
    </update>
    
    
    <delete id="delete">
               DELETE /* com.ceragem.api.crm.dao.CrmCustBasDao.delete */ 
                 FROM CRM_CUST_BAS
        <include refid="sqlPkConditions"/>
    </delete>
    <delete id="deleteDormant">
               DELETE /* com.ceragem.api.crm.dao.CrmCustBasDao.deleteDormant */ 
                 FROM CRM_DORM_CUST_BAS
        <include refid="sqlPkConditions"/>
    </delete>
    
    <update id="updateSuccessLogin">
               UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateSuccessLogin */ 
                  SET MSHIP_LAST_LOGIN_DT                     =         SYSDATE
                    , MSHIP_LAST_LOGIN_IP_ADDR                =         #{mshipLastLoginIpAddr}
        <include refid="sqlPkConditions"/>
    </update>
    <update id="updateLoginPassword">
               UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateLoginPassword */ 
                  SET MSHIP_LOGIN_PWD                     =         #{mshipLoginPwd}
        <include refid="sqlPkConditions"/>
    </update>
     <update id="updateLoginIdPassword">
               UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateLoginIdPassword */ 
                  SET MSHIP_LOGIN_PWD                     =         #{mshipLoginPwd}
                    , MSHIP_LOGIN_ID                          =         #{mshipLoginId}
        <include refid="sqlPkConditions"/>
    </update>
    
    <update id="updateCustType">
               UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateCustType */ 
                  SET CUST_TYPE_CD                     =         #{custTypeCd}
        <include refid="sqlPkConditions"/>
    </update>
    <update id="updateAlliance">
                UPDATE CRM_CUST_BAS
                   SET MSHIP_TYPE_CD                           =         '002'
                 WHERE ITG_CUST_NO                             =         #{itgCustNo}
                   AND ( SELECT COUNT(1) 
                           FROM CRM_CRPT_CMP_EXECVDEMP_BAS 
                          WHERE EXECVDEMP_NM = #{custNm} 
                            AND CPRT_CMP_IDFY_NO = #{empNo} 
                   ) > 0 
    </update>
    <update id="updateAllianceRefNull">
                UPDATE CRM_CRPT_CMP_EXECVDEMP_BAS
                   SET ITG_CUST_NO = NULL
                 WHERE ITG_CUST_NO = #{itgCustNo}
    </update>
    <update id="updateAllianceRef">
                UPDATE CRM_CRPT_CMP_EXECVDEMP_BAS
                   SET ITG_CUST_NO = #{itgCustNo}
                 WHERE EXECVDEMP_NM = #{custNm} 
                   AND CPRT_CMP_IDFY_NO = #{empNo} 
                   AND ITG_CUST_NO IS NULL
    </update>
     <update id="updateToken">
               UPDATE CRM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateToken */ 
                  SET APP_PUSH_TOKN                           =         #{appPushTokn}
                    , APP_PUSH_OS_CD                          =         NVL(#{appPushOsCd},APP_PUSH_OS_CD)
        <include refid="sqlPkConditions"/>
    </update>
    
    <update id="updateDormantStatus">
               UPDATE CRM_DORM_CUST_BAS /* com.ceragem.api.crm.dao.CrmCustBasDao.updateDormantStatus */ 
                  SET CUST_STATUS_CD                           =         '003'
                    , MSHIP_LEAVE_DT                           =         NVL(MSHIP_LEAVE_DT,SYSDATE)
        <include refid="sqlPkConditions"/>
    </update>
    
    
     <select id="selectRcmdCustInfo" resultType="com.ceragem.api.crm.model.CrmCustVo">
       	SELECT   /* com.ceragem.api.crm.dao.CrmCustBasDao.selectRcmdCustInfo */ 
       		CUST_NM	
       	 FROM CRM_CUST_BAS 
       	 WHERE ITG_CUST_NO = #{rcmdrCustNo}
     </select>
    
</mapper>
